[
	{
		"id": "payment-authorisation-functionality",
		"tags": [
			{
				"name": "@PaymentsAuthorisationModule",
				"line": 1
			},
			{
				"name": "@PaymentAuthorisation",
				"line": 1
			}
		],
		"description": "As a CSR Agent, I want the Billing View to be able to perform payment authorisation operations",
		"name": "Payment Authorisation functionality",
		"keyword": "Feature",
		"line": 3,
		"elements": [
			{
				"after": [
					{
						"result": {
							"duration": 1319766280,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;payment-authorization-module-is-displayed-correctly-and-the-form-fields-accept-only-the-allowed-inputs",
				"tags": [
					{
						"name": "@NightlyBuild-Modules",
						"line": 6
					},
					{
						"name": "@HappyPath",
						"line": 6
					}
				],
				"before": [
					{
						"result": {
							"duration": 8926701362,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					},
					{
						"result": {
							"duration": 7757925029,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Payment Authorization module is displayed correctly and the form fields accept only the allowed inputs",
				"keyword": "Scenario",
				"line": 7,
				"steps": [
					{
						"result": {
							"duration": 5006787323,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 8,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 70643702,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "When ",
						"line": 9,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 3183246214,
							"status": "passed"
						},
						"name": "the Card Holder Name field accepts only valid inputs",
						"keyword": "Then ",
						"line": 10,
						"match": {
							"location": "ChangePaymentSteps.cardHolderNameInputValidation()"
						}
					},
					{
						"result": {
							"duration": 649142022,
							"status": "passed"
						},
						"name": "the Card number field accepts only valid inputs",
						"keyword": "And ",
						"line": 11,
						"match": {
							"location": "ChangePaymentSteps.cardNumberInputValidation()"
						}
					},
					{
						"result": {
							"duration": 1705242126,
							"status": "passed"
						},
						"name": "the Expiry Date field accepts only valid inputs",
						"keyword": "And ",
						"line": 12,
						"match": {
							"arguments": [
								{
									"val": "Expiry",
									"offset": 4
								}
							],
							"location": "ChangePaymentSteps.dateInputValidation(String)"
						}
					},
					{
						"result": {
							"duration": 633064699,
							"status": "passed"
						},
						"name": "the Security Code field accepts only valid inputs",
						"keyword": "And ",
						"line": 13,
						"match": {
							"location": "TakePaymentSteps.securityCodeInputValidation()"
						}
					},
					{
						"result": {
							"duration": 100296968,
							"status": "passed"
						},
						"name": "the Amount field is not editable",
						"keyword": "And ",
						"line": 14,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationFieldDisabled()"
						}
					},
					{
						"result": {
							"duration": 96151190,
							"status": "passed"
						},
						"name": "the Authorise payment button is enabled",
						"keyword": "And ",
						"line": 15,
						"match": {
							"location": "AuthorisePaymentSteps.authorisePaymentButtonEnabled()"
						}
					},
					{
						"result": {
							"duration": 98921484,
							"status": "passed"
						},
						"name": "the Start Date is not displayed",
						"keyword": "And ",
						"line": 16,
						"match": {
							"arguments": [
								{
									"val": "Start Date",
									"offset": 4
								},
								{
									"val": "is not",
									"offset": 15
								}
							],
							"location": "ChangePaymentSteps.inputNotDisplayed(String,String)"
						}
					},
					{
						"result": {
							"duration": 97816547,
							"status": "passed"
						},
						"name": "the Issue Number is not displayed",
						"keyword": "And ",
						"line": 17,
						"match": {
							"arguments": [
								{
									"val": "Issue Number",
									"offset": 4
								},
								{
									"val": "is not",
									"offset": 17
								}
							],
							"location": "ChangePaymentSteps.inputNotDisplayed(String,String)"
						}
					},
					{
						"result": {
							"duration": 882358042,
							"status": "passed"
						},
						"name": "the agent changes the card number to one that requires the Start Date",
						"keyword": "And ",
						"line": 18,
						"match": {
							"location": "ChangePaymentSteps.agentChangeCardStartDate()"
						}
					},
					{
						"result": {
							"duration": 1608698771,
							"status": "passed"
						},
						"name": "the Start Date field accepts only valid inputs",
						"keyword": "And ",
						"line": 19,
						"match": {
							"arguments": [
								{
									"val": "Start",
									"offset": 4
								}
							],
							"location": "ChangePaymentSteps.dateInputValidation(String)"
						}
					},
					{
						"result": {
							"duration": 89318886,
							"status": "passed"
						},
						"name": "the Issue Number is not displayed",
						"keyword": "And ",
						"line": 20,
						"match": {
							"arguments": [
								{
									"val": "Issue Number",
									"offset": 4
								},
								{
									"val": "is not",
									"offset": 17
								}
							],
							"location": "ChangePaymentSteps.inputNotDisplayed(String,String)"
						}
					},
					{
						"result": {
							"duration": 869502114,
							"status": "passed"
						},
						"name": "the agent changes the card number to one that requires the Issue Number",
						"keyword": "And ",
						"line": 21,
						"match": {
							"location": "ChangePaymentSteps.agentChangeCardIssueNumber()"
						}
					},
					{
						"result": {
							"duration": 60511729,
							"status": "passed"
						},
						"name": "the Issue Number accepts only valid inputs",
						"keyword": "And ",
						"line": 22,
						"match": {
							"location": "ChangePaymentSteps.issueNumberInputValidation()"
						}
					},
					{
						"result": {
							"duration": 88621619,
							"status": "passed"
						},
						"name": "the Start Date is not displayed",
						"keyword": "And ",
						"line": 23,
						"match": {
							"arguments": [
								{
									"val": "Start Date",
									"offset": 4
								},
								{
									"val": "is not",
									"offset": 15
								}
							],
							"location": "ChangePaymentSteps.inputNotDisplayed(String,String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1116786533,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;the-billing-view-must-be-able-to-process-payment-authorisation-functionality-without-charges;;2",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 25
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 25
					}
				],
				"before": [
					{
						"result": {
							"duration": 7527698018,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "The Billing View must be able to process Payment Authorisation functionality without charges",
				"keyword": "Scenario Outline",
				"line": 40,
				"steps": [
					{
						"result": {
							"duration": 4140353797,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 27,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 15560934,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 28,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1420512424,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 4111111111111111 of type Visa",
						"keyword": "And ",
						"line": 29,
						"match": {
							"arguments": [
								{
									"val": "4111111111111111",
									"offset": 40
								},
								{
									"val": "Visa",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 919818803,
							"status": "passed"
						},
						"name": "the Visa logo is displayed",
						"keyword": "And ",
						"line": 30,
						"match": {
							"arguments": [
								{
									"val": "Visa",
									"offset": 4
								}
							],
							"location": "ChangePaymentSteps.cardTypeLogoDisplayed(String)"
						},
						"matchedColumns": [
							1
						]
					},
					{
						"result": {
							"duration": 217315579,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 31,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 754977754,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 32,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 510591070,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 33,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 56455005,
							"status": "passed"
						},
						"name": "the Amount field is not editable",
						"keyword": "And ",
						"line": 34,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationFieldDisabled()"
						}
					},
					{
						"result": {
							"duration": 4322154320,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "When ",
						"line": 35,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 55794610,
							"status": "passed"
						},
						"name": "we can see the blank screen of successful payment authorisation",
						"keyword": "Then ",
						"line": 36,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationSuccess()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1067580341,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;the-billing-view-must-be-able-to-process-payment-authorisation-functionality-without-charges;;3",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 25
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 25
					}
				],
				"before": [
					{
						"result": {
							"duration": 7453027706,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "The Billing View must be able to process Payment Authorisation functionality without charges",
				"keyword": "Scenario Outline",
				"line": 41,
				"steps": [
					{
						"result": {
							"duration": 4160027447,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 27,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14906350,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 28,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1404454704,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 5471420918342675 of type Master Card",
						"keyword": "And ",
						"line": 29,
						"match": {
							"arguments": [
								{
									"val": "5471420918342675",
									"offset": 40
								},
								{
									"val": "Master Card",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 914644385,
							"status": "passed"
						},
						"name": "the Master Card logo is displayed",
						"keyword": "And ",
						"line": 30,
						"match": {
							"arguments": [
								{
									"val": "Master Card",
									"offset": 4
								}
							],
							"location": "ChangePaymentSteps.cardTypeLogoDisplayed(String)"
						},
						"matchedColumns": [
							1
						]
					},
					{
						"result": {
							"duration": 211893643,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 31,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 740834447,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 32,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 532568472,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 33,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 56535027,
							"status": "passed"
						},
						"name": "the Amount field is not editable",
						"keyword": "And ",
						"line": 34,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationFieldDisabled()"
						}
					},
					{
						"result": {
							"duration": 4320076731,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "When ",
						"line": 35,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 55610937,
							"status": "passed"
						},
						"name": "we can see the blank screen of successful payment authorisation",
						"keyword": "Then ",
						"line": 36,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationSuccess()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1071611772,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;the-billing-view-must-be-able-to-process-payment-authorisation-functionality-with-charges-and-discounts;;2",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 44
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 44
					}
				],
				"before": [
					{
						"result": {
							"duration": 7439272588,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "The Billing View must be able to process Payment Authorisation functionality with charges and discounts",
				"keyword": "Scenario Outline",
				"line": 59,
				"steps": [
					{
						"result": {
							"duration": 3900314318,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 46,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 22295910,
							"status": "passed"
						},
						"name": "we are setting the charge payment details for a UK customer",
						"keyword": "And ",
						"line": 47,
						"match": {
							"arguments": [
								{
									"val": "charge",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 48
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1406020348,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 5471420918342675 of type Master Card",
						"keyword": "And ",
						"line": 48,
						"match": {
							"arguments": [
								{
									"val": "5471420918342675",
									"offset": 40
								},
								{
									"val": "Master Card",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						}
					},
					{
						"result": {
							"duration": 915304283,
							"status": "passed"
						},
						"name": "the Master Card logo is displayed",
						"keyword": "And ",
						"line": 49,
						"match": {
							"arguments": [
								{
									"val": "Master Card",
									"offset": 4
								}
							],
							"location": "ChangePaymentSteps.cardTypeLogoDisplayed(String)"
						}
					},
					{
						"result": {
							"duration": 214748767,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 50,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 756992971,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 51,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 507546297,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 52,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 54730656,
							"status": "passed"
						},
						"name": "the Amount field is not editable",
						"keyword": "And ",
						"line": 53,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationFieldDisabled()"
						}
					},
					{
						"result": {
							"duration": 4319113424,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "When ",
						"line": 54,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 53665156,
							"status": "passed"
						},
						"name": "we can see the blank screen of successful payment authorisation",
						"keyword": "Then ",
						"line": 55,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationSuccess()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1102860800,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;the-billing-view-must-be-able-to-process-payment-authorisation-functionality-with-charges-and-discounts;;3",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 44
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 44
					}
				],
				"before": [
					{
						"result": {
							"duration": 7429086587,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "The Billing View must be able to process Payment Authorisation functionality with charges and discounts",
				"keyword": "Scenario Outline",
				"line": 60,
				"steps": [
					{
						"result": {
							"duration": 3933284925,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 46,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 21270725,
							"status": "passed"
						},
						"name": "we are setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 47,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 46
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1358970257,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 5471420918342675 of type Master Card",
						"keyword": "And ",
						"line": 48,
						"match": {
							"arguments": [
								{
									"val": "5471420918342675",
									"offset": 40
								},
								{
									"val": "Master Card",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						}
					},
					{
						"result": {
							"duration": 913680720,
							"status": "passed"
						},
						"name": "the Master Card logo is displayed",
						"keyword": "And ",
						"line": 49,
						"match": {
							"arguments": [
								{
									"val": "Master Card",
									"offset": 4
								}
							],
							"location": "ChangePaymentSteps.cardTypeLogoDisplayed(String)"
						}
					},
					{
						"result": {
							"duration": 209820629,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 50,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 736927760,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 51,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 512636456,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 52,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 55492130,
							"status": "passed"
						},
						"name": "the Amount field is not editable",
						"keyword": "And ",
						"line": 53,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationFieldDisabled()"
						}
					},
					{
						"result": {
							"duration": 4319336779,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "When ",
						"line": 54,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 53330999,
							"status": "passed"
						},
						"name": "we can see the blank screen of successful payment authorisation",
						"keyword": "Then ",
						"line": 55,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationSuccess()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1106625427,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;the-billing-view-must-be-able-to-process-payment-authorisation-action-with-a-maestro-card-that-requires-issue-number-and-is-not-valid-for-continuous-payment",
				"tags": [
					{
						"name": "@NightlyBuild-Modules",
						"line": 63
					},
					{
						"name": "@HappyPath",
						"line": 63
					}
				],
				"before": [
					{
						"result": {
							"duration": 7426067506,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "The Billing View must be able to process Payment Authorisation Action with a Maestro card that requires issue number and is not valid for continuous payment",
				"keyword": "Scenario",
				"line": 64,
				"steps": [
					{
						"result": {
							"duration": 3858502920,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 65,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14698996,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 66,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1369459707,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 6767065342675918 of type Maestro",
						"keyword": "And ",
						"line": 67,
						"match": {
							"arguments": [
								{
									"val": "6767065342675918",
									"offset": 40
								},
								{
									"val": "Maestro",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						}
					},
					{
						"result": {
							"duration": 917904145,
							"status": "passed"
						},
						"name": "the Maestro logo is displayed",
						"keyword": "And ",
						"line": 68,
						"match": {
							"arguments": [
								{
									"val": "Maestro",
									"offset": 4
								}
							],
							"location": "ChangePaymentSteps.cardTypeLogoDisplayed(String)"
						}
					},
					{
						"result": {
							"duration": 211696906,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 69,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 766954190,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 70,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 508601530,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 71,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 490730555,
							"status": "passed"
						},
						"name": "the agent enters a valid issue number 12",
						"keyword": "And ",
						"line": 72,
						"match": {
							"arguments": [
								{
									"val": "12",
									"offset": 38
								}
							],
							"location": "TakePaymentSteps.agentEntersIssueNumber(String)"
						}
					},
					{
						"result": {
							"duration": 55661763,
							"status": "passed"
						},
						"name": "the Amount field is not editable",
						"keyword": "And ",
						"line": 73,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationFieldDisabled()"
						}
					},
					{
						"result": {
							"duration": 4318248991,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "When ",
						"line": 74,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 59557242,
							"status": "passed"
						},
						"name": "we can see the blank screen of successful payment authorisation",
						"keyword": "Then ",
						"line": 75,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationSuccess()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1080910341,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;the-billing-view-must-be-able-to-process-payment-authorisation-action-functionality-for-roi-customer;;2",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 77
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 77
					}
				],
				"before": [
					{
						"result": {
							"duration": 7413755793,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "The Billing View must be able to process Payment Authorisation Action functionality for ROI customer",
				"keyword": "Scenario Outline",
				"line": 92,
				"steps": [
					{
						"result": {
							"duration": 3875856497,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 79,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14710063,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a ROI customer",
						"keyword": "And ",
						"line": 80,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "ROI",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1430658840,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 4111111111111111 of type Visa",
						"keyword": "And ",
						"line": 81,
						"match": {
							"arguments": [
								{
									"val": "4111111111111111",
									"offset": 40
								},
								{
									"val": "Visa",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 915799832,
							"status": "passed"
						},
						"name": "the Visa logo is displayed",
						"keyword": "And ",
						"line": 82,
						"match": {
							"arguments": [
								{
									"val": "Visa",
									"offset": 4
								}
							],
							"location": "ChangePaymentSteps.cardTypeLogoDisplayed(String)"
						},
						"matchedColumns": [
							1
						]
					},
					{
						"result": {
							"duration": 210664782,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 83,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 738218381,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 84,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 509357260,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 85,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 55706558,
							"status": "passed"
						},
						"name": "the Amount field is not editable",
						"keyword": "And ",
						"line": 86,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationFieldDisabled()"
						}
					},
					{
						"result": {
							"duration": 4323113450,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "When ",
						"line": 87,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 55155354,
							"status": "passed"
						},
						"name": "we can see the blank screen of successful payment authorisation",
						"keyword": "Then ",
						"line": 88,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationSuccess()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1093874920,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;the-billing-view-must-be-able-to-process-payment-authorisation-action-functionality-for-roi-customer;;3",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 77
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 77
					}
				],
				"before": [
					{
						"result": {
							"duration": 7387609479,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "The Billing View must be able to process Payment Authorisation Action functionality for ROI customer",
				"keyword": "Scenario Outline",
				"line": 93,
				"steps": [
					{
						"result": {
							"duration": 4056046112,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 79,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 17487978,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a ROI customer",
						"keyword": "And ",
						"line": 80,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "ROI",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1403950544,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 5471420918342675 of type Master Card",
						"keyword": "And ",
						"line": 81,
						"match": {
							"arguments": [
								{
									"val": "5471420918342675",
									"offset": 40
								},
								{
									"val": "Master Card",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 915866845,
							"status": "passed"
						},
						"name": "the Master Card logo is displayed",
						"keyword": "And ",
						"line": 82,
						"match": {
							"arguments": [
								{
									"val": "Master Card",
									"offset": 4
								}
							],
							"location": "ChangePaymentSteps.cardTypeLogoDisplayed(String)"
						},
						"matchedColumns": [
							1
						]
					},
					{
						"result": {
							"duration": 209754167,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 83,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 745983162,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 84,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 512612058,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 85,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 66607172,
							"status": "passed"
						},
						"name": "the Amount field is not editable",
						"keyword": "And ",
						"line": 86,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationFieldDisabled()"
						}
					},
					{
						"result": {
							"duration": 4320057340,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "When ",
						"line": 87,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 54804222,
							"status": "passed"
						},
						"name": "we can see the blank screen of successful payment authorisation",
						"keyword": "Then ",
						"line": 88,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationSuccess()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1195334849,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;maestro-cards-are-not-accepted-for-roi-customer",
				"tags": [
					{
						"name": "@NightlyBuild-Modules",
						"line": 96
					},
					{
						"name": "@HappyPath",
						"line": 96
					}
				],
				"before": [
					{
						"result": {
							"duration": 7416884538,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Maestro Cards are not accepted for ROI customer",
				"keyword": "Scenario",
				"line": 97,
				"steps": [
					{
						"result": {
							"duration": 3892278701,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 98,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14821899,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a ROI customer",
						"keyword": "And ",
						"line": 99,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "ROI",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1361396155,
							"status": "passed"
						},
						"name": "the agent enters a Credit Card Number of type Maestro that requires an issue number",
						"keyword": "When ",
						"line": 100,
						"match": {
							"location": "ChangePaymentSteps.agentEntersMaestroCardIssueNumber()"
						}
					},
					{
						"result": {
							"duration": 214783458,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 101,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 740331463,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 102,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 513321049,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 103,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 473717267,
							"status": "passed"
						},
						"name": "the agent enters a valid issue number 12",
						"keyword": "And ",
						"line": 104,
						"match": {
							"arguments": [
								{
									"val": "12",
									"offset": 38
								}
							],
							"location": "TakePaymentSteps.agentEntersIssueNumber(String)"
						}
					},
					{
						"result": {
							"duration": 56664956,
							"status": "passed"
						},
						"name": "the Amount field is not editable",
						"keyword": "And ",
						"line": 105,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationFieldDisabled()"
						}
					},
					{
						"result": {
							"duration": 4319173479,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "And ",
						"line": 106,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 1327392663,
							"status": "passed"
						},
						"name": "the message \u0027Currency invalid\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 107,
						"match": {
							"arguments": [
								{
									"val": "Currency invalid",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1125775710,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;the-fields-of-the-payment-authorisation-form-display-an-error-when-editing-the-fields-and-leaving-them-empty-again",
				"tags": [
					{
						"name": "@NightlyBuild-Modules",
						"line": 109
					},
					{
						"name": "@UnhappyPath",
						"line": 109
					}
				],
				"before": [
					{
						"result": {
							"duration": 7375471243,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "The fields of the Payment Authorisation form display an error when editing the fields and leaving them empty again",
				"keyword": "Scenario",
				"line": 110,
				"steps": [
					{
						"result": {
							"duration": 3862629603,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 111,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 15057761,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 112,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 318445,
							"status": "passed"
						},
						"name": "leaving the fields empty after editing it",
						"keyword": "When ",
						"line": 113,
						"match": {
							"location": "ChangePaymentSteps.leaveFieldsEmpty()"
						}
					},
					{
						"result": {
							"duration": 31136,
							"status": "passed"
						},
						"name": "the message \u0027Required\u0027 appears in the fields name",
						"keyword": "Then ",
						"line": 114,
						"match": {
							"location": "ChangePaymentSteps.messageRequiredInAllFields()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1088213195,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;when-the-first-6-digits-of-a-card-do-not-match-with-any-card-specification,-the-message-\u0027problem-mapping-card\u0027-appears-above-the-card-number-field",
				"tags": [
					{
						"name": "@NightlyBuild-Modules",
						"line": 116
					},
					{
						"name": "@UnhappyPath",
						"line": 116
					}
				],
				"before": [
					{
						"result": {
							"duration": 7359903525,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "When the first 6 digits of a card do not match with any card specification, the message \u0027Problem mapping card\u0027 appears above the card number field",
				"keyword": "Scenario",
				"line": 117,
				"steps": [
					{
						"result": {
							"duration": 3861628547,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 118,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14844766,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 119,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1534626219,
							"status": "passed"
						},
						"name": "trying to perform a Payment Authorisation using a non existing card type",
						"keyword": "When ",
						"line": 120,
						"match": {
							"arguments": [
								{
									"val": "Payment Authorisation",
									"offset": 20
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardWithoutSpecification(String)"
						}
					},
					{
						"result": {
							"duration": 1341578229,
							"status": "passed"
						},
						"name": "the message \u0027Problem mapping card\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 121,
						"match": {
							"arguments": [
								{
									"val": "Problem mapping card",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1111013469,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;when-the-credit-card-number-don\u0027t-pass-the-checksum-validations,-the-message-\u0027payment-card-number-invalid\u0027-appears-above-the-card-number-field",
				"tags": [
					{
						"name": "@NightlyBuild-Modules",
						"line": 123
					},
					{
						"name": "@UnhappyPath",
						"line": 123
					}
				],
				"before": [
					{
						"result": {
							"duration": 7378157522,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "When the credit card number don\u0027t pass the checksum validations, the message \u0027Payment card number invalid\u0027 appears above the card number field",
				"keyword": "Scenario",
				"line": 124,
				"steps": [
					{
						"result": {
							"duration": 3861044582,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 125,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14906655,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 126,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1342373177,
							"status": "passed"
						},
						"name": "the agent enters an invalid Credit Card Number",
						"keyword": "And ",
						"line": 127,
						"match": {
							"location": "ChangePaymentSteps.agentEntersInvalidCard()"
						}
					},
					{
						"result": {
							"duration": 211773254,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 128,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 738136801,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 129,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 510692534,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 12/18",
						"keyword": "And ",
						"line": 130,
						"match": {
							"arguments": [
								{
									"val": "12/18",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 4279877091,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "When ",
						"line": 131,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 1328435094,
							"status": "passed"
						},
						"name": "the message \u0027Invalid Number\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 132,
						"match": {
							"arguments": [
								{
									"val": "Invalid Number",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1069421349,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;if-the-agent-introduces-an-expiry-date-in-the-past,-the-message-\u0027in-the-past\u0027-is-displayed",
				"tags": [
					{
						"name": "@NightlyBuild-Modules",
						"line": 134
					},
					{
						"name": "@UnhappyPath",
						"line": 134
					}
				],
				"before": [
					{
						"result": {
							"duration": 7359835961,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent introduces an expiry date in the past, the message \u0027In the past\u0027 is displayed",
				"keyword": "Scenario",
				"line": 135,
				"steps": [
					{
						"result": {
							"duration": 3902132016,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 136,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 15247814,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 137,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1724024617,
							"status": "passed"
						},
						"name": "the agent enters an Expiry Date in the past",
						"keyword": "And ",
						"line": 138,
						"match": {
							"location": "ChangePaymentSteps.expiryDateInThePast()"
						}
					},
					{
						"result": {
							"duration": 58702,
							"status": "passed"
						},
						"name": "the agent edits another field",
						"keyword": "When ",
						"line": 139,
						"match": {
							"location": "ChangePaymentSteps.tryingToEditAnotherField()"
						}
					},
					{
						"result": {
							"duration": 1325013623,
							"status": "passed"
						},
						"name": "the message \u0027In the past\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 140,
						"match": {
							"arguments": [
								{
									"val": "In the past",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1114213344,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;if-the-agent-introduces-an-expiry-date-greater-than-2070,-a-non-existing-date-or-with-an-invalid-format,-the-message-\u0027invalid\u0027-is-displayed;;2",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 142
					},
					{
						"name": "@UnhappyPath",
						"line": 142
					}
				],
				"before": [
					{
						"result": {
							"duration": 7393716387,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent introduces an expiry date greater than 2070, a non existing date or with an invalid format, the message \u0027Invalid\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 152,
				"steps": [
					{
						"result": {
							"duration": 3868543705,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 144,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14726579,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 145,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1755314396,
							"status": "passed"
						},
						"name": "the agent enters the invalid Expiry Date 01/71",
						"keyword": "And ",
						"line": 146,
						"match": {
							"arguments": [
								{
									"val": "Expiry Date",
									"offset": 29
								},
								{
									"val": "01/71",
									"offset": 41
								}
							],
							"location": "ChangePaymentSteps.invalidDate(String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 49227,
							"status": "passed"
						},
						"name": "the agent edits another field",
						"keyword": "When ",
						"line": 147,
						"match": {
							"location": "ChangePaymentSteps.tryingToEditAnotherField()"
						}
					},
					{
						"result": {
							"duration": 1325748065,
							"status": "passed"
						},
						"name": "the message \u0027Invalid\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 148,
						"match": {
							"arguments": [
								{
									"val": "Invalid",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1090659147,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;if-the-agent-introduces-an-expiry-date-greater-than-2070,-a-non-existing-date-or-with-an-invalid-format,-the-message-\u0027invalid\u0027-is-displayed;;3",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 142
					},
					{
						"name": "@UnhappyPath",
						"line": 142
					}
				],
				"before": [
					{
						"result": {
							"duration": 7334241531,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent introduces an expiry date greater than 2070, a non existing date or with an invalid format, the message \u0027Invalid\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 153,
				"steps": [
					{
						"result": {
							"duration": 4000195313,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 144,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 17731499,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 145,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1753101996,
							"status": "passed"
						},
						"name": "the agent enters the invalid Expiry Date 13/16",
						"keyword": "And ",
						"line": 146,
						"match": {
							"arguments": [
								{
									"val": "Expiry Date",
									"offset": 29
								},
								{
									"val": "13/16",
									"offset": 41
								}
							],
							"location": "ChangePaymentSteps.invalidDate(String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 47836,
							"status": "passed"
						},
						"name": "the agent edits another field",
						"keyword": "When ",
						"line": 147,
						"match": {
							"location": "ChangePaymentSteps.tryingToEditAnotherField()"
						}
					},
					{
						"result": {
							"duration": 1325675864,
							"status": "passed"
						},
						"name": "the message \u0027Invalid\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 148,
						"match": {
							"arguments": [
								{
									"val": "Invalid",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1117197225,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;if-the-agent-introduces-an-expiry-date-greater-than-2070,-a-non-existing-date-or-with-an-invalid-format,-the-message-\u0027invalid\u0027-is-displayed;;4",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 142
					},
					{
						"name": "@UnhappyPath",
						"line": 142
					}
				],
				"before": [
					{
						"result": {
							"duration": 7418166274,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent introduces an expiry date greater than 2070, a non existing date or with an invalid format, the message \u0027Invalid\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 154,
				"steps": [
					{
						"result": {
							"duration": 3864040627,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 144,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 17049561,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 145,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1750580153,
							"status": "passed"
						},
						"name": "the agent enters the invalid Expiry Date 00/16",
						"keyword": "And ",
						"line": 146,
						"match": {
							"arguments": [
								{
									"val": "Expiry Date",
									"offset": 29
								},
								{
									"val": "00/16",
									"offset": 41
								}
							],
							"location": "ChangePaymentSteps.invalidDate(String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 49049,
							"status": "passed"
						},
						"name": "the agent edits another field",
						"keyword": "When ",
						"line": 147,
						"match": {
							"location": "ChangePaymentSteps.tryingToEditAnotherField()"
						}
					},
					{
						"result": {
							"duration": 1324083617,
							"status": "passed"
						},
						"name": "the message \u0027Invalid\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 148,
						"match": {
							"arguments": [
								{
									"val": "Invalid",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1106537203,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;if-the-agent-introduces-an-expiry-date-greater-than-2070,-a-non-existing-date-or-with-an-invalid-format,-the-message-\u0027invalid\u0027-is-displayed;;5",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 142
					},
					{
						"name": "@UnhappyPath",
						"line": 142
					}
				],
				"before": [
					{
						"result": {
							"duration": 7393339161,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent introduces an expiry date greater than 2070, a non existing date or with an invalid format, the message \u0027Invalid\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 155,
				"steps": [
					{
						"result": {
							"duration": 3872955516,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 144,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14507802,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 145,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1756169926,
							"status": "passed"
						},
						"name": "the agent enters the invalid Expiry Date 0/115",
						"keyword": "And ",
						"line": 146,
						"match": {
							"arguments": [
								{
									"val": "Expiry Date",
									"offset": 29
								},
								{
									"val": "0/115",
									"offset": 41
								}
							],
							"location": "ChangePaymentSteps.invalidDate(String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 49640,
							"status": "passed"
						},
						"name": "the agent edits another field",
						"keyword": "When ",
						"line": 147,
						"match": {
							"location": "ChangePaymentSteps.tryingToEditAnotherField()"
						}
					},
					{
						"result": {
							"duration": 1325022320,
							"status": "passed"
						},
						"name": "the message \u0027Invalid\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 148,
						"match": {
							"arguments": [
								{
									"val": "Invalid",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1105539788,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;if-the-agent-introduces-a-start-date-in-the-future,-a-non-existing-date-or-with-an-invalid-format,-the-message-\u0027invalid\u0027-is-displayed;;2",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 158
					},
					{
						"name": "@UnhappyPath",
						"line": 158
					}
				],
				"before": [
					{
						"result": {
							"duration": 7408351612,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent introduces a start date in the future, a non existing date or with an invalid format, the message \u0027Invalid\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 169,
				"steps": [
					{
						"result": {
							"duration": 3943275035,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 160,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14520475,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 161,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 2032043309,
							"status": "passed"
						},
						"name": "the agent changes the card number to one that requires the Start Date",
						"keyword": "And ",
						"line": 162,
						"match": {
							"location": "ChangePaymentSteps.agentChangeCardStartDate()"
						}
					},
					{
						"result": {
							"duration": 571654899,
							"status": "passed"
						},
						"name": "the agent enters the invalid Start Date 01/17",
						"keyword": "And ",
						"line": 163,
						"match": {
							"arguments": [
								{
									"val": "Start Date",
									"offset": 29
								},
								{
									"val": "01/17",
									"offset": 40
								}
							],
							"location": "ChangePaymentSteps.invalidDate(String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 48242,
							"status": "passed"
						},
						"name": "the agent edits another field",
						"keyword": "When ",
						"line": 164,
						"match": {
							"location": "ChangePaymentSteps.tryingToEditAnotherField()"
						}
					},
					{
						"result": {
							"duration": 1324998198,
							"status": "passed"
						},
						"name": "the message \u0027Invalid\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 165,
						"match": {
							"arguments": [
								{
									"val": "Invalid",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1105328522,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;if-the-agent-introduces-a-start-date-in-the-future,-a-non-existing-date-or-with-an-invalid-format,-the-message-\u0027invalid\u0027-is-displayed;;3",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 158
					},
					{
						"name": "@UnhappyPath",
						"line": 158
					}
				],
				"before": [
					{
						"result": {
							"duration": 7304406161,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent introduces a start date in the future, a non existing date or with an invalid format, the message \u0027Invalid\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 170,
				"steps": [
					{
						"result": {
							"duration": 3894170250,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 160,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14774807,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 161,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 2031960614,
							"status": "passed"
						},
						"name": "the agent changes the card number to one that requires the Start Date",
						"keyword": "And ",
						"line": 162,
						"match": {
							"location": "ChangePaymentSteps.agentChangeCardStartDate()"
						}
					},
					{
						"result": {
							"duration": 570691145,
							"status": "passed"
						},
						"name": "the agent enters the invalid Start Date 13/10",
						"keyword": "And ",
						"line": 163,
						"match": {
							"arguments": [
								{
									"val": "Start Date",
									"offset": 29
								},
								{
									"val": "13/10",
									"offset": 40
								}
							],
							"location": "ChangePaymentSteps.invalidDate(String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 51860,
							"status": "passed"
						},
						"name": "the agent edits another field",
						"keyword": "When ",
						"line": 164,
						"match": {
							"location": "ChangePaymentSteps.tryingToEditAnotherField()"
						}
					},
					{
						"result": {
							"duration": 1326816848,
							"status": "passed"
						},
						"name": "the message \u0027Invalid\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 165,
						"match": {
							"arguments": [
								{
									"val": "Invalid",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1092997086,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;if-the-agent-introduces-a-start-date-in-the-future,-a-non-existing-date-or-with-an-invalid-format,-the-message-\u0027invalid\u0027-is-displayed;;4",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 158
					},
					{
						"name": "@UnhappyPath",
						"line": 158
					}
				],
				"before": [
					{
						"result": {
							"duration": 7347813943,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent introduces a start date in the future, a non existing date or with an invalid format, the message \u0027Invalid\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 171,
				"steps": [
					{
						"result": {
							"duration": 3854556641,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 160,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14414518,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 161,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 2027510025,
							"status": "passed"
						},
						"name": "the agent changes the card number to one that requires the Start Date",
						"keyword": "And ",
						"line": 162,
						"match": {
							"location": "ChangePaymentSteps.agentChangeCardStartDate()"
						}
					},
					{
						"result": {
							"duration": 573801751,
							"status": "passed"
						},
						"name": "the agent enters the invalid Start Date 00/10",
						"keyword": "And ",
						"line": 163,
						"match": {
							"arguments": [
								{
									"val": "Start Date",
									"offset": 29
								},
								{
									"val": "00/10",
									"offset": 40
								}
							],
							"location": "ChangePaymentSteps.invalidDate(String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 50548,
							"status": "passed"
						},
						"name": "the agent edits another field",
						"keyword": "When ",
						"line": 164,
						"match": {
							"location": "ChangePaymentSteps.tryingToEditAnotherField()"
						}
					},
					{
						"result": {
							"duration": 1323720324,
							"status": "passed"
						},
						"name": "the message \u0027Invalid\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 165,
						"match": {
							"arguments": [
								{
									"val": "Invalid",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1070153826,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;if-the-agent-introduces-a-start-date-in-the-future,-a-non-existing-date-or-with-an-invalid-format,-the-message-\u0027invalid\u0027-is-displayed;;5",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 158
					},
					{
						"name": "@UnhappyPath",
						"line": 158
					}
				],
				"before": [
					{
						"result": {
							"duration": 7331733029,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent introduces a start date in the future, a non existing date or with an invalid format, the message \u0027Invalid\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 172,
				"steps": [
					{
						"result": {
							"duration": 3842770600,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 160,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14583739,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 161,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 2024037884,
							"status": "passed"
						},
						"name": "the agent changes the card number to one that requires the Start Date",
						"keyword": "And ",
						"line": 162,
						"match": {
							"location": "ChangePaymentSteps.agentChangeCardStartDate()"
						}
					},
					{
						"result": {
							"duration": 569887471,
							"status": "passed"
						},
						"name": "the agent enters the invalid Start Date 0/115",
						"keyword": "And ",
						"line": 163,
						"match": {
							"arguments": [
								{
									"val": "Start Date",
									"offset": 29
								},
								{
									"val": "0/115",
									"offset": 40
								}
							],
							"location": "ChangePaymentSteps.invalidDate(String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 47649,
							"status": "passed"
						},
						"name": "the agent edits another field",
						"keyword": "When ",
						"line": 164,
						"match": {
							"location": "ChangePaymentSteps.tryingToEditAnotherField()"
						}
					},
					{
						"result": {
							"duration": 1325971664,
							"status": "passed"
						},
						"name": "the message \u0027Invalid\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 165,
						"match": {
							"arguments": [
								{
									"val": "Invalid",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1085479429,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;credit-card-number-field-must-have-16-or-19-length.-otherwise-the-message-\u0027the-length-must-be-16-or-19\u0027-is-displayed;;2",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 175
					},
					{
						"name": "@UnhappyPath",
						"line": 175
					}
				],
				"before": [
					{
						"result": {
							"duration": 7318975658,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Credit card number field must have 16 or 19 length. Otherwise the message \u0027The length must be 16 or 19\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 184,
				"steps": [
					{
						"result": {
							"duration": 3856494575,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 177,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 16793922,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 178,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 2026842786,
							"status": "passed"
						},
						"name": "trying to perform a Payment Authorisation using an invalid card number of 17 digit",
						"keyword": "When ",
						"line": 179,
						"match": {
							"arguments": [
								{
									"val": "Payment Authorisation",
									"offset": 20
								},
								{
									"val": "17",
									"offset": 74
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardWithInvalidLength(String,int)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1325626295,
							"status": "passed"
						},
						"name": "the message \u0027The length must be 16 or 19\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 180,
						"match": {
							"arguments": [
								{
									"val": "The length must be 16 or 19",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1076145662,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;credit-card-number-field-must-have-16-or-19-length.-otherwise-the-message-\u0027the-length-must-be-16-or-19\u0027-is-displayed;;3",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 175
					},
					{
						"name": "@UnhappyPath",
						"line": 175
					}
				],
				"before": [
					{
						"result": {
							"duration": 7325026855,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Credit card number field must have 16 or 19 length. Otherwise the message \u0027The length must be 16 or 19\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 185,
				"steps": [
					{
						"result": {
							"duration": 3886528788,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 177,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 15916967,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 178,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 2020865206,
							"status": "passed"
						},
						"name": "trying to perform a Payment Authorisation using an invalid card number of 15 digit",
						"keyword": "When ",
						"line": 179,
						"match": {
							"arguments": [
								{
									"val": "Payment Authorisation",
									"offset": 20
								},
								{
									"val": "15",
									"offset": 74
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardWithInvalidLength(String,int)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1325480196,
							"status": "passed"
						},
						"name": "the message \u0027The length must be 16 or 19\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 180,
						"match": {
							"arguments": [
								{
									"val": "The length must be 16 or 19",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1104935443,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;credit-card-number-field-must-have-16-or-19-length.-otherwise-the-message-\u0027the-length-must-be-16-or-19\u0027-is-displayed;;4",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 175
					},
					{
						"name": "@UnhappyPath",
						"line": 175
					}
				],
				"before": [
					{
						"result": {
							"duration": 7413924116,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Credit card number field must have 16 or 19 length. Otherwise the message \u0027The length must be 16 or 19\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 186,
				"steps": [
					{
						"result": {
							"duration": 27107744353,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 177,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						},
						"output": [
							"Login Failed RETRYING (1/3)\n"
						]
					},
					{
						"result": {
							"duration": 14200294,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 178,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 2018497048,
							"status": "passed"
						},
						"name": "trying to perform a Payment Authorisation using an invalid card number of 18 digit",
						"keyword": "When ",
						"line": 179,
						"match": {
							"arguments": [
								{
									"val": "Payment Authorisation",
									"offset": 20
								},
								{
									"val": "18",
									"offset": 74
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardWithInvalidLength(String,int)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1326512098,
							"status": "passed"
						},
						"name": "the message \u0027The length must be 16 or 19\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 180,
						"match": {
							"arguments": [
								{
									"val": "The length must be 16 or 19",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1092360010,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;credit-card-number-field-must-have-16-or-19-length.-otherwise-the-message-\u0027the-length-must-be-16-or-19\u0027-is-displayed;;5",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 175
					},
					{
						"name": "@UnhappyPath",
						"line": 175
					}
				],
				"before": [
					{
						"result": {
							"duration": 7314817662,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Credit card number field must have 16 or 19 length. Otherwise the message \u0027The length must be 16 or 19\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 187,
				"steps": [
					{
						"result": {
							"duration": 3934384890,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 177,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 16161542,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 178,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 2025525322,
							"status": "passed"
						},
						"name": "trying to perform a Payment Authorisation using an invalid card number of 14 digit",
						"keyword": "When ",
						"line": 179,
						"match": {
							"arguments": [
								{
									"val": "Payment Authorisation",
									"offset": 20
								},
								{
									"val": "14",
									"offset": 74
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardWithInvalidLength(String,int)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1327177961,
							"status": "passed"
						},
						"name": "the message \u0027The length must be 16 or 19\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 180,
						"match": {
							"arguments": [
								{
									"val": "The length must be 16 or 19",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1117740231,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;security-code-must-be-3-digits-in-length--otherwise-the-message-\u0027invalid-length\u0027-is-displayed;;2",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 190
					},
					{
						"name": "@UnhappyPath",
						"line": 190
					}
				],
				"before": [
					{
						"result": {
							"duration": 7328854096,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Security code must be 3 digits in length- otherwise the message \u0027Invalid length\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 199,
				"steps": [
					{
						"result": {
							"duration": 3866902140,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 192,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 15075431,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 193,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1577659342,
							"status": "passed"
						},
						"name": "trying to perform a Payment Authorisation using an invalid security code of 1",
						"keyword": "When ",
						"line": 194,
						"match": {
							"arguments": [
								{
									"val": "1",
									"offset": 76
								}
							],
							"location": "AuthorisePaymentSteps.paymentAuthInvalidSecurityCodeLength(String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1326698843,
							"status": "passed"
						},
						"name": "the message \u0027Invalid length\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 195,
						"match": {
							"arguments": [
								{
									"val": "Invalid length",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1071512015,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;security-code-must-be-3-digits-in-length--otherwise-the-message-\u0027invalid-length\u0027-is-displayed;;3",
				"tags": [
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@PaymentAuthorisation",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 190
					},
					{
						"name": "@UnhappyPath",
						"line": 190
					}
				],
				"before": [
					{
						"result": {
							"duration": 7273532007,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Security code must be 3 digits in length- otherwise the message \u0027Invalid length\u0027 is displayed",
				"keyword": "Scenario Outline",
				"line": 200,
				"steps": [
					{
						"result": {
							"duration": 3860210188,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 192,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14376227,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 193,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1572431737,
							"status": "passed"
						},
						"name": "trying to perform a Payment Authorisation using an invalid security code of 12",
						"keyword": "When ",
						"line": 194,
						"match": {
							"arguments": [
								{
									"val": "12",
									"offset": 76
								}
							],
							"location": "AuthorisePaymentSteps.paymentAuthInvalidSecurityCodeLength(String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1324691897,
							"status": "passed"
						},
						"name": "the message \u0027Invalid length\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 195,
						"match": {
							"arguments": [
								{
									"val": "Invalid length",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1107365438,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;laser-cards-are-not-accepted",
				"tags": [
					{
						"name": "@NightlyBuild-Modules",
						"line": 203
					},
					{
						"name": "@UnhappyPath",
						"line": 203
					}
				],
				"before": [
					{
						"result": {
							"duration": 7318933931,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Laser Cards are not accepted",
				"keyword": "Scenario",
				"line": 204,
				"steps": [
					{
						"result": {
							"duration": 3898276506,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 205,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 15152748,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 206,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1337423446,
							"status": "passed"
						},
						"name": "the agent enters a Credit Card Number of type Laser Card",
						"keyword": "When ",
						"line": 207,
						"match": {
							"location": "ChangePaymentSteps.agentEntersLaserCard()"
						}
					},
					{
						"result": {
							"duration": 1380915304,
							"status": "passed"
						},
						"name": "the message \u0027Laser cards are not accepted\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 208,
						"match": {
							"arguments": [
								{
									"val": "Laser cards are not accepted",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1095442777,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality;laser-cards-are-not-accepted-for-roi-customer",
				"tags": [
					{
						"name": "@NightlyBuild-Modules",
						"line": 210
					},
					{
						"name": "@UnhappyPath",
						"line": 210
					}
				],
				"description": "",
				"name": "Laser Cards are not accepted for ROI customer",
				"keyword": "Scenario",
				"line": 211,
				"steps": [
					{
						"result": {
							"duration": 3844321658,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 212,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 14691322,
							"status": "passed"
						},
						"name": "we are setting the prerequisite payment details for a ROI customer",
						"keyword": "And ",
						"line": 213,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 19
								},
								{
									"val": "ROI",
									"offset": 54
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 1330330372,
							"status": "passed"
						},
						"name": "the agent enters a Credit Card Number of type Laser Card",
						"keyword": "When ",
						"line": 214,
						"match": {
							"location": "ChangePaymentSteps.agentEntersLaserCard()"
						}
					},
					{
						"result": {
							"duration": 1384574721,
							"status": "passed"
						},
						"name": "the message \u0027Laser cards are not accepted\u0027 appears above the field name",
						"keyword": "Then ",
						"line": 215,
						"match": {
							"arguments": [
								{
									"val": "Laser cards are not accepted",
									"offset": 13
								}
							],
							"location": "ChangePaymentSteps.errorMessageDisplayedInField(String)"
						}
					}
				],
				"type": "scenario"
			}
		],
		"uri": "paymentAuthorisation.feature"
	},
	{
		"id": "payment-authorisation-functionality-integration-using-the-consumer-mock",
		"tags": [
			{
				"name": "@PaymentsAuthorisationModule",
				"line": 1
			},
			{
				"name": "@PaymentAuthorisationConsumerMock",
				"line": 1
			},
			{
				"name": "@NightlyBuild-Modules",
				"line": 1
			}
		],
		"description": "As a CSR Agent, I want the Billing View to be able to perform payment authorisation operations or to provide error messages through the Consumer Mock",
		"name": "Payment Authorisation functionality integration using the Consumer Mock",
		"keyword": "Feature",
		"line": 3,
		"elements": [
			{
				"after": [
					{
						"result": {
							"duration": 1082163463,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality-integration-using-the-consumer-mock;the-billing-view-must-be-able-to-process-payment-authorisation-functionality-with-charges-and-discounts-using-the-consumer-mock;;2",
				"tags": [
					{
						"name": "@PaymentAuthorisationConsumerMock",
						"line": 1
					},
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 6
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 1
					},
					{
						"name": "@Integration",
						"line": 6
					}
				],
				"before": [
					{
						"result": {
							"duration": 7291563676,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					},
					{
						"result": {
							"duration": 7294611637,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "The Billing View must be able to process Payment Authorisation functionality with charges and discounts using the Consumer Mock",
				"keyword": "Scenario Outline",
				"line": 24,
				"steps": [
					{
						"result": {
							"duration": 5891209093,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 8,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 1046982900,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 9,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 1006539150,
							"status": "passed"
						},
						"name": "the consumer is setting the prerequisite payment details for a UK customer",
						"keyword": "And ",
						"line": 10,
						"match": {
							"arguments": [
								{
									"val": "prerequisite",
									"offset": 28
								},
								{
									"val": "UK",
									"offset": 63
								}
							],
							"location": "AuthorisePaymentSteps.setPaymentAuthDetailsWithConsumerMock(String,String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1047182944,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "And ",
						"line": 11,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 125246691,
							"status": "passed"
						},
						"name": "the agent selects \u0027Customer\u0027 as the owner of the card",
						"keyword": "And ",
						"line": 12,
						"match": {
							"arguments": [
								{
									"val": "Customer",
									"offset": 19
								}
							],
							"location": "StorePaymentCardDetailsSteps.cardOwnerSelected(String)"
						}
					},
					{
						"result": {
							"duration": 237851031,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 5471420918342675 of type Master Card",
						"keyword": "And ",
						"line": 13,
						"match": {
							"arguments": [
								{
									"val": "5471420918342675",
									"offset": 40
								},
								{
									"val": "Master Card",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						}
					},
					{
						"result": {
							"duration": 913904104,
							"status": "passed"
						},
						"name": "the Master Card logo is displayed",
						"keyword": "And ",
						"line": 14,
						"match": {
							"arguments": [
								{
									"val": "Master Card",
									"offset": 4
								}
							],
							"location": "ChangePaymentSteps.cardTypeLogoDisplayed(String)"
						}
					},
					{
						"result": {
							"duration": 209026773,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 15,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 743107472,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 16,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 565700300,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 17,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 56955132,
							"status": "passed"
						},
						"name": "the Amount field is not editable",
						"keyword": "And ",
						"line": 18,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationFieldDisabled()"
						}
					},
					{
						"result": {
							"duration": 4320174090,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "When ",
						"line": 19,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 54513899,
							"status": "passed"
						},
						"name": "we can see the blank screen of successful payment authorisation",
						"keyword": "Then ",
						"line": 20,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationSuccess()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1092597853,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality-integration-using-the-consumer-mock;the-billing-view-must-be-able-to-process-payment-authorisation-functionality-with-charges-and-discounts-using-the-consumer-mock;;3",
				"tags": [
					{
						"name": "@PaymentAuthorisationConsumerMock",
						"line": 1
					},
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 6
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 1
					},
					{
						"name": "@Integration",
						"line": 6
					}
				],
				"before": [
					{
						"result": {
							"duration": 7358984412,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "The Billing View must be able to process Payment Authorisation functionality with charges and discounts using the Consumer Mock",
				"keyword": "Scenario Outline",
				"line": 25,
				"steps": [
					{
						"result": {
							"duration": 5793740026,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 8,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 1048003058,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 9,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 1006738867,
							"status": "passed"
						},
						"name": "the consumer is setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 10,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 28
								},
								{
									"val": "UK",
									"offset": 55
								}
							],
							"location": "AuthorisePaymentSteps.setPaymentAuthDetailsWithConsumerMock(String,String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1047063247,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "And ",
						"line": 11,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 127729402,
							"status": "passed"
						},
						"name": "the agent selects \u0027Customer\u0027 as the owner of the card",
						"keyword": "And ",
						"line": 12,
						"match": {
							"arguments": [
								{
									"val": "Customer",
									"offset": 19
								}
							],
							"location": "StorePaymentCardDetailsSteps.cardOwnerSelected(String)"
						}
					},
					{
						"result": {
							"duration": 236639449,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 5471420918342675 of type Master Card",
						"keyword": "And ",
						"line": 13,
						"match": {
							"arguments": [
								{
									"val": "5471420918342675",
									"offset": 40
								},
								{
									"val": "Master Card",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						}
					},
					{
						"result": {
							"duration": 915954175,
							"status": "passed"
						},
						"name": "the Master Card logo is displayed",
						"keyword": "And ",
						"line": 14,
						"match": {
							"arguments": [
								{
									"val": "Master Card",
									"offset": 4
								}
							],
							"location": "ChangePaymentSteps.cardTypeLogoDisplayed(String)"
						}
					},
					{
						"result": {
							"duration": 211917667,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 15,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 745060881,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 16,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 564761096,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 17,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 55855220,
							"status": "passed"
						},
						"name": "the Amount field is not editable",
						"keyword": "And ",
						"line": 18,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationFieldDisabled()"
						}
					},
					{
						"result": {
							"duration": 4317348148,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "When ",
						"line": 19,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 55479855,
							"status": "passed"
						},
						"name": "we can see the blank screen of successful payment authorisation",
						"keyword": "Then ",
						"line": 20,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationSuccess()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1092190418,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality-integration-using-the-consumer-mock;when-a-payment-authorisation-is-not-authorised,-the-billing-view-is-displaying-a-specific-error-messages;;2",
				"tags": [
					{
						"name": "@PaymentAuthorisationConsumerMock",
						"line": 1
					},
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 1
					},
					{
						"name": "@ExceptionScenario",
						"line": 28
					}
				],
				"before": [
					{
						"result": {
							"duration": 7328201901,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "When a Payment Authorisation is not authorised, the Billing View is displaying a specific error messages",
				"keyword": "Scenario Outline",
				"line": 45,
				"steps": [
					{
						"result": {
							"duration": 5629596548,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 30,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 1046806714,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 31,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 1006212150,
							"status": "passed"
						},
						"name": "the consumer is setting the payment details with an amount of 3.33",
						"keyword": "And ",
						"line": 32,
						"match": {
							"arguments": [
								{
									"val": "3.33",
									"offset": 62
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadWithAmountWithConsumerMock(String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1046620610,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "And ",
						"line": 33,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 126453886,
							"status": "passed"
						},
						"name": "the agent selects \u0027Customer\u0027 as the owner of the card",
						"keyword": "And ",
						"line": 34,
						"match": {
							"arguments": [
								{
									"val": "Customer",
									"offset": 19
								}
							],
							"location": "StorePaymentCardDetailsSteps.cardOwnerSelected(String)"
						}
					},
					{
						"result": {
							"duration": 234756405,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 4111111111111111 of type Visa",
						"keyword": "And ",
						"line": 35,
						"match": {
							"arguments": [
								{
									"val": "4111111111111111",
									"offset": 40
								},
								{
									"val": "Visa",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						}
					},
					{
						"result": {
							"duration": 209250412,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 36,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 752318700,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 37,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 558428033,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 38,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 4278908574,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "And ",
						"line": 39,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 42478,
							"status": "passed"
						},
						"name": "the Payment Authorisation operation fails",
						"keyword": "Then ",
						"line": 40,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthFails()"
						}
					},
					{
						"result": {
							"duration": 720767970,
							"status": "passed"
						},
						"name": "the error message \"Payment was not authorised as the card has been referred. Please retry using different payment details.\" is displayed within the Payment Authorisation screen",
						"keyword": "And ",
						"line": 41,
						"match": {
							"arguments": [
								{
									"val": "Payment was not authorised as the card has been referred. Please retry using different payment details.",
									"offset": 19
								}
							],
							"location": "AuthorisePaymentSteps.paymentAuthorisationErrorMessageDisplayed(String)"
						},
						"matchedColumns": [
							1
						]
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1642313231,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality-integration-using-the-consumer-mock;when-a-payment-authorisation-is-not-authorised,-the-billing-view-is-displaying-a-specific-error-messages;;3",
				"tags": [
					{
						"name": "@PaymentAuthorisationConsumerMock",
						"line": 1
					},
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 1
					},
					{
						"name": "@ExceptionScenario",
						"line": 28
					}
				],
				"before": [
					{
						"result": {
							"duration": 7440998260,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "When a Payment Authorisation is not authorised, the Billing View is displaying a specific error messages",
				"keyword": "Scenario Outline",
				"line": 46,
				"steps": [
					{
						"result": {
							"duration": 5755711647,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 30,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 1046993889,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 31,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 1006258917,
							"status": "passed"
						},
						"name": "the consumer is setting the payment details with an amount of 4.44",
						"keyword": "And ",
						"line": 32,
						"match": {
							"arguments": [
								{
									"val": "4.44",
									"offset": 62
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadWithAmountWithConsumerMock(String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1046682846,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "And ",
						"line": 33,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 126391772,
							"status": "passed"
						},
						"name": "the agent selects \u0027Customer\u0027 as the owner of the card",
						"keyword": "And ",
						"line": 34,
						"match": {
							"arguments": [
								{
									"val": "Customer",
									"offset": 19
								}
							],
							"location": "StorePaymentCardDetailsSteps.cardOwnerSelected(String)"
						}
					},
					{
						"result": {
							"duration": 232779236,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 4111111111111111 of type Visa",
						"keyword": "And ",
						"line": 35,
						"match": {
							"arguments": [
								{
									"val": "4111111111111111",
									"offset": 40
								},
								{
									"val": "Visa",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						}
					},
					{
						"result": {
							"duration": 211925733,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 36,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 736343841,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 37,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 569048958,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 38,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 4280865519,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "And ",
						"line": 39,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 79174,
							"status": "passed"
						},
						"name": "the Payment Authorisation operation fails",
						"keyword": "Then ",
						"line": 40,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthFails()"
						}
					},
					{
						"result": {
							"duration": 720961990,
							"status": "passed",
							"error_message": "org.junit.ComparisonFailure: expected:\u003c[Payment was not authorised. Please retry using different payment details].\u003e but was:\u003c[There has been a system error, please try again. If this continues then please report this to your manager in case there is a wider issue].\u003e\n\tat org.junit.Assert.assertEquals(Assert.java:115)\n\tat org.junit.Assert.assertEquals(Assert.java:144)\n\tat com.bskyb.web.billing.driver.AbstractWebDriver.assertParameter(AbstractWebDriver.java:244)\n\tat com.bskyb.web.billing.steps.AuthorisePaymentSteps.paymentAuthorisationErrorMessageDisplayed(AuthorisePaymentSteps.java:124)\n\tat ✽.And the error message \"Payment was not authorised. Please retry using different payment details.\" is displayed within the Payment Authorisation screen(paymentAuthorisationConsumerMock.feature:41)\n"
						},
						"name": "the error message \"Payment was not authorised. Please retry using different payment details.\" is displayed within the Payment Authorisation screen",
						"keyword": "And ",
						"line": 41,
						"match": {
							"arguments": [
								{
									"val": "Payment was not authorised. Please retry using different payment details.",
									"offset": 19
								}
							],
							"location": "AuthorisePaymentSteps.paymentAuthorisationErrorMessageDisplayed(String)"
						},
						"matchedColumns": [
							1
						]
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1069079879,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality-integration-using-the-consumer-mock;when-a-payment-authorisation-is-not-authorised,-the-billing-view-is-displaying-a-specific-error-messages;;4",
				"tags": [
					{
						"name": "@PaymentAuthorisationConsumerMock",
						"line": 1
					},
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 1
					},
					{
						"name": "@ExceptionScenario",
						"line": 28
					}
				],
				"before": [
					{
						"result": {
							"duration": 3313639558,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "When a Payment Authorisation is not authorised, the Billing View is displaying a specific error messages",
				"keyword": "Scenario Outline",
				"line": 47,
				"steps": [
					{
						"result": {
							"duration": 5843943719,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 30,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 1046819328,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 31,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 1006405636,
							"status": "passed"
						},
						"name": "the consumer is setting the payment details with an amount of 7.77",
						"keyword": "And ",
						"line": 32,
						"match": {
							"arguments": [
								{
									"val": "7.77",
									"offset": 62
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadWithAmountWithConsumerMock(String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1046936802,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "And ",
						"line": 33,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 126719088,
							"status": "passed"
						},
						"name": "the agent selects \u0027Customer\u0027 as the owner of the card",
						"keyword": "And ",
						"line": 34,
						"match": {
							"arguments": [
								{
									"val": "Customer",
									"offset": 19
								}
							],
							"location": "StorePaymentCardDetailsSteps.cardOwnerSelected(String)"
						}
					},
					{
						"result": {
							"duration": 246071530,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 4111111111111111 of type Visa",
						"keyword": "And ",
						"line": 35,
						"match": {
							"arguments": [
								{
									"val": "4111111111111111",
									"offset": 40
								},
								{
									"val": "Visa",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						}
					},
					{
						"result": {
							"duration": 209046619,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 36,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 740973104,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 37,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 569712291,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 38,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 4279852072,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "And ",
						"line": 39,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 38516,
							"status": "passed"
						},
						"name": "the Payment Authorisation operation fails",
						"keyword": "Then ",
						"line": 40,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthFails()"
						}
					},
					{
						"result": {
							"duration": 720678557,
							"status": "passed"
						},
						"name": "the error message \"Payment was not verified. Please retry using different payment details.\" is displayed within the Payment Authorisation screen",
						"keyword": "And ",
						"line": 41,
						"match": {
							"arguments": [
								{
									"val": "Payment was not verified. Please retry using different payment details.",
									"offset": 19
								}
							],
							"location": "AuthorisePaymentSteps.paymentAuthorisationErrorMessageDisplayed(String)"
						},
						"matchedColumns": [
							1
						]
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1106261592,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality-integration-using-the-consumer-mock;payment-authorisation-is-not-performed-when-there-is-an-http-error;;2",
				"tags": [
					{
						"name": "@PaymentAuthorisationConsumerMock",
						"line": 1
					},
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@Mocked",
						"line": 50
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 1
					},
					{
						"name": "@ExceptionScenario",
						"line": 50
					}
				],
				"before": [
					{
						"result": {
							"duration": 3316920930,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Payment authorisation is not performed when there is an http error",
				"keyword": "Scenario Outline",
				"line": 68,
				"steps": [
					{
						"result": {
							"duration": 5756558470,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 52,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 1047814247,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 53,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 2006473986,
							"status": "passed"
						},
						"name": "the consumer is setting the payment details for a customer with account number [621152689561]",
						"keyword": "And ",
						"line": 54,
						"match": {
							"arguments": [
								{
									"val": "621152689561",
									"offset": 80
								}
							],
							"location": "AuthorisePaymentSteps.setPaymentAuthDetailsWithConsumerMockAccount(String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1048016714,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "And ",
						"line": 55,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 126101261,
							"status": "passed"
						},
						"name": "the agent selects \u0027Customer\u0027 as the owner of the card",
						"keyword": "And ",
						"line": 56,
						"match": {
							"arguments": [
								{
									"val": "Customer",
									"offset": 19
								}
							],
							"location": "StorePaymentCardDetailsSteps.cardOwnerSelected(String)"
						}
					},
					{
						"result": {
							"duration": 252737086,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 4111111111111111 of type Visa",
						"keyword": "And ",
						"line": 57,
						"match": {
							"arguments": [
								{
									"val": "4111111111111111",
									"offset": 40
								},
								{
									"val": "Visa",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						}
					},
					{
						"result": {
							"duration": 223252493,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 58,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 732675673,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Test PAM",
						"keyword": "And ",
						"line": 59,
						"match": {
							"arguments": [
								{
									"val": "Test PAM",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 571550833,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 07/19",
						"keyword": "And ",
						"line": 60,
						"match": {
							"arguments": [
								{
									"val": "07/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 4278742210,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "When ",
						"line": 61,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 83045,
							"status": "passed"
						},
						"name": "there is an http 400 Payment Authorisation error",
						"keyword": "But ",
						"line": 62,
						"match": {
							"arguments": [
								{
									"val": "400",
									"offset": 17
								}
							],
							"location": "AuthorisePaymentSteps.paymentAuthHttpError(String)"
						},
						"matchedColumns": [
							2
						]
					},
					{
						"result": {
							"duration": 18632,
							"status": "passed"
						},
						"name": "the Payment Authorisation operation fails",
						"keyword": "Then ",
						"line": 63,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthFails()"
						}
					},
					{
						"result": {
							"duration": 136216880,
							"status": "passed"
						},
						"name": "the error code \"service.error\" with the error message \"Problem authorasing the payment. Please try again in a few moments and if the problem persist contact the system administrator.\" is received from the consumer",
						"keyword": "And ",
						"line": 64,
						"match": {
							"arguments": [
								{
									"val": "service.error",
									"offset": 16
								},
								{
									"val": "Problem authorasing the payment. Please try again in a few moments and if the problem persist contact the system administrator.",
									"offset": 55
								}
							],
							"location": "AuthorisePaymentSteps.spaymentAuthorisationErrorMessageDisplayed(String,String)"
						},
						"matchedColumns": [
							3,
							4
						]
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1098983244,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality-integration-using-the-consumer-mock;payment-authorisation-is-not-performed-when-there-is-an-http-error;;3",
				"tags": [
					{
						"name": "@PaymentAuthorisationConsumerMock",
						"line": 1
					},
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@Mocked",
						"line": 50
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 1
					},
					{
						"name": "@ExceptionScenario",
						"line": 50
					}
				],
				"before": [
					{
						"result": {
							"duration": 3283780779,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Payment authorisation is not performed when there is an http error",
				"keyword": "Scenario Outline",
				"line": 69,
				"steps": [
					{
						"result": {
							"duration": 5798140051,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 52,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 1046629665,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 53,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 2006233869,
							"status": "passed"
						},
						"name": "the consumer is setting the payment details for a customer with account number [621152689637]",
						"keyword": "And ",
						"line": 54,
						"match": {
							"arguments": [
								{
									"val": "621152689637",
									"offset": 80
								}
							],
							"location": "AuthorisePaymentSteps.setPaymentAuthDetailsWithConsumerMockAccount(String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 1047422117,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "And ",
						"line": 55,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 128759379,
							"status": "passed"
						},
						"name": "the agent selects \u0027Customer\u0027 as the owner of the card",
						"keyword": "And ",
						"line": 56,
						"match": {
							"arguments": [
								{
									"val": "Customer",
									"offset": 19
								}
							],
							"location": "StorePaymentCardDetailsSteps.cardOwnerSelected(String)"
						}
					},
					{
						"result": {
							"duration": 237720103,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 4111111111111111 of type Visa",
						"keyword": "And ",
						"line": 57,
						"match": {
							"arguments": [
								{
									"val": "4111111111111111",
									"offset": 40
								},
								{
									"val": "Visa",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						}
					},
					{
						"result": {
							"duration": 216856437,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 58,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 752123871,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Test PAM",
						"keyword": "And ",
						"line": 59,
						"match": {
							"arguments": [
								{
									"val": "Test PAM",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 568454503,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 07/19",
						"keyword": "And ",
						"line": 60,
						"match": {
							"arguments": [
								{
									"val": "07/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 4280933789,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "When ",
						"line": 61,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 115899,
							"status": "passed"
						},
						"name": "there is an http 500 Payment Authorisation error",
						"keyword": "But ",
						"line": 62,
						"match": {
							"arguments": [
								{
									"val": "500",
									"offset": 17
								}
							],
							"location": "AuthorisePaymentSteps.paymentAuthHttpError(String)"
						},
						"matchedColumns": [
							2
						]
					},
					{
						"result": {
							"duration": 27326,
							"status": "passed"
						},
						"name": "the Payment Authorisation operation fails",
						"keyword": "Then ",
						"line": 63,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthFails()"
						}
					},
					{
						"result": {
							"duration": 137363317,
							"status": "passed"
						},
						"name": "the error code \"service.error\" with the error message \"Problem authorasing the payment. Please try again in a few moments and if the problem persist contact the system administrator.\" is received from the consumer",
						"keyword": "And ",
						"line": 64,
						"match": {
							"arguments": [
								{
									"val": "service.error",
									"offset": 16
								},
								{
									"val": "Problem authorasing the payment. Please try again in a few moments and if the problem persist contact the system administrator.",
									"offset": 55
								}
							],
							"location": "AuthorisePaymentSteps.spaymentAuthorisationErrorMessageDisplayed(String,String)"
						},
						"matchedColumns": [
							3,
							4
						]
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1093974867,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality-integration-using-the-consumer-mock;payment-authorisation-is-not-performed-when-the-authorisation-service-returns-a-payload-with-missing-details;;2",
				"tags": [
					{
						"name": "@PaymentAuthorisationConsumerMock",
						"line": 1
					},
					{
						"name": "@PaymentsAuthorisationModule",
						"line": 1
					},
					{
						"name": "@Mocked",
						"line": 71
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 1
					},
					{
						"name": "@ExceptionScenario",
						"line": 71
					}
				],
				"before": [
					{
						"result": {
							"duration": 7318814346,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Payment authorisation is not performed when the authorisation service returns a payload with missing details",
				"keyword": "Scenario Outline",
				"line": 89,
				"steps": [
					{
						"result": {
							"duration": 5632801514,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 73,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 1047006966,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 74,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 2006287660,
							"status": "passed"
						},
						"name": "the consumer is setting the payment details for a customer with account number [621152689504]",
						"keyword": "And ",
						"line": 75,
						"match": {
							"arguments": [
								{
									"val": "621152689504",
									"offset": 80
								}
							],
							"location": "AuthorisePaymentSteps.setPaymentAuthDetailsWithConsumerMockAccount(String)"
						}
					},
					{
						"result": {
							"duration": 1047674653,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "And ",
						"line": 76,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 128528598,
							"status": "passed"
						},
						"name": "the agent selects \u0027Customer\u0027 as the owner of the card",
						"keyword": "And ",
						"line": 77,
						"match": {
							"arguments": [
								{
									"val": "Customer",
									"offset": 19
								}
							],
							"location": "StorePaymentCardDetailsSteps.cardOwnerSelected(String)"
						}
					},
					{
						"result": {
							"duration": 237163911,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 4111111111111111 of type Visa",
						"keyword": "And ",
						"line": 78,
						"match": {
							"arguments": [
								{
									"val": "4111111111111111",
									"offset": 40
								},
								{
									"val": "Visa",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						}
					},
					{
						"result": {
							"duration": 228437203,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 79,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 734401123,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Test PAM",
						"keyword": "And ",
						"line": 80,
						"match": {
							"arguments": [
								{
									"val": "Test PAM",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 567357584,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 07/19",
						"keyword": "And ",
						"line": 81,
						"match": {
							"arguments": [
								{
									"val": "07/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 4280231221,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "When ",
						"line": 82,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 44370,
							"status": "passed"
						},
						"name": "the payment service is returning wrong authorisation details",
						"keyword": "But ",
						"line": 83,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthPASError()"
						}
					},
					{
						"result": {
							"duration": 18897,
							"status": "passed"
						},
						"name": "the Payment Authorisation operation fails",
						"keyword": "Then ",
						"line": 84,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthFails()"
						}
					},
					{
						"result": {
							"duration": 136480255,
							"status": "passed"
						},
						"name": "the error code \"service.error\" with the error message \"Problem authorasing the payment. Please try again in a few moments and if the problem persist contact the system administrator.\" is received from the consumer",
						"keyword": "And ",
						"line": 85,
						"match": {
							"arguments": [
								{
									"val": "service.error",
									"offset": 16
								},
								{
									"val": "Problem authorasing the payment. Please try again in a few moments and if the problem persist contact the system administrator.",
									"offset": 55
								}
							],
							"location": "AuthorisePaymentSteps.spaymentAuthorisationErrorMessageDisplayed(String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1161288419,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality-integration-using-the-consumer-mock;the-pam-module-is-resized-automatically-when-there-is-a-card-with-additional-issue-number-field",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 111
					}
				],
				"before": [
					{
						"result": {
							"duration": 7307543316,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "The PAM module is resized automatically when there is a card with additional issue number field",
				"keyword": "Scenario",
				"line": 112,
				"steps": [
					{
						"result": {
							"duration": 5661713375,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 113,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 1047572777,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 114,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 2006381595,
							"status": "passed"
						},
						"name": "the consumer is setting the payment details for a customer with account number [621149750799]",
						"keyword": "And ",
						"line": 115,
						"match": {
							"arguments": [
								{
									"val": "621149750799",
									"offset": 80
								}
							],
							"location": "AuthorisePaymentSteps.setPaymentAuthDetailsWithConsumerMockAccount(String)"
						}
					},
					{
						"result": {
							"duration": 58290153,
							"status": "passed"
						},
						"name": "the module has the default height",
						"keyword": "And ",
						"line": 116,
						"match": {
							"location": "AuthorisePaymentSteps.defaultModuleHeight()"
						}
					},
					{
						"result": {
							"duration": 1086878930,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "And ",
						"line": 117,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 200412448,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 6767065342675918 of type Maestro",
						"keyword": "When ",
						"line": 118,
						"match": {
							"arguments": [
								{
									"val": "6767065342675918",
									"offset": 40
								},
								{
									"val": "Maestro",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						}
					},
					{
						"result": {
							"duration": 99015430,
							"status": "passed"
						},
						"name": "the Issue Number is displayed",
						"keyword": "Then ",
						"line": 119,
						"match": {
							"arguments": [
								{
									"val": "Issue Number",
									"offset": 4
								},
								{
									"val": "is",
									"offset": 17
								}
							],
							"location": "ChangePaymentSteps.inputNotDisplayed(String,String)"
						}
					},
					{
						"result": {
							"duration": 218829492,
							"status": "passed"
						},
						"name": "the current module height is greater than the default module height",
						"keyword": "And ",
						"line": 120,
						"match": {
							"location": "AuthorisePaymentSteps.currentModuleHeight()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1076319765,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-functionality-integration-using-the-consumer-mock;the-pam-module-is-resized-automatically-when-there-customer-has-more-than-one-stored-cards",
				"tags": [
					{
						"name": "@NightlyBuild-Modules",
						"line": 122
					},
					{
						"name": "@HappyPath",
						"line": 122
					}
				],
				"description": "",
				"name": "The PAM module is resized automatically when there customer has more than one stored cards",
				"keyword": "Scenario",
				"line": 123,
				"steps": [
					{
						"result": {
							"duration": 5625256253,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 124,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 1046694318,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 125,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 2006334060,
							"status": "passed"
						},
						"name": "the consumer is setting the payment details for a customer with account number [621149750799]",
						"keyword": "And ",
						"line": 126,
						"match": {
							"arguments": [
								{
									"val": "621149750799",
									"offset": 80
								}
							],
							"location": "AuthorisePaymentSteps.setPaymentAuthDetailsWithConsumerMockAccount(String)"
						}
					},
					{
						"result": {
							"duration": 56411645,
							"status": "passed"
						},
						"name": "the module has the default height",
						"keyword": "And ",
						"line": 127,
						"match": {
							"location": "AuthorisePaymentSteps.defaultModuleHeight()"
						}
					},
					{
						"result": {
							"duration": 1086086261,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "And ",
						"line": 128,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 285080163,
							"status": "passed"
						},
						"name": "the agent goes to the PAM Stored Cards tab",
						"keyword": "When ",
						"line": 129,
						"match": {
							"location": "AuthorisePaymentSteps.goToPamStoredCardsTab()"
						}
					},
					{
						"result": {
							"duration": 55599835,
							"status": "passed"
						},
						"name": "the customer has [5] Stored Cards in the list",
						"keyword": "And ",
						"line": 130,
						"match": {
							"arguments": [
								{
									"val": "5",
									"offset": 18
								}
							],
							"location": "AuthorisePaymentSteps.numberOfStoredCards(int)"
						}
					},
					{
						"result": {
							"duration": 217955168,
							"status": "passed"
						},
						"name": "the current module height is greater than the default module height",
						"keyword": "Then ",
						"line": 131,
						"match": {
							"location": "AuthorisePaymentSteps.currentModuleHeight()"
						}
					}
				],
				"type": "scenario"
			}
		],
		"uri": "paymentAuthorisationConsumerMock.feature"
	},
	{
		"id": "authorise-payment-using-semafone",
		"tags": [
			{
				"name": "@PaymentsAuthorisationModule",
				"line": 1
			},
			{
				"name": "@PaymentAuthorisationSemafone",
				"line": 1
			}
		],
		"description": "As a CSR Agent, I want the Billing View to be able to perform payment authorisation actions whilst connected to Semafone",
		"name": "Authorise payment using Semafone",
		"keyword": "Feature",
		"line": 2,
		"elements": [
			{
				"after": [
					{
						"result": {
							"duration": 919846990,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "authorise-payment-using-semafone;agent-can-click-reset-whilst-receiving-card-info-from-semafone-and-this-will-clear-the-field",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 27
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 27
					}
				],
				"before": [
					{
						"result": {
							"duration": 7320137818,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					},
					{
						"result": {
							"duration": 7291660749,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Agent can click reset whilst receiving card info from Semafone and this will clear the field",
				"keyword": "Scenario",
				"line": 28,
				"steps": [
					{
						"result": {
							"duration": 3974046555,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 29,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 18165347,
							"status": "passed"
						},
						"name": "we are setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 30,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 46
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 482343092,
							"status": "passed"
						},
						"name": "the agent is connected to Semafone [with SemafoneCr 1051]",
						"keyword": "And ",
						"line": 31,
						"match": {
							"arguments": [
								{
									"val": "1051",
									"offset": 52
								}
							],
							"location": "SemafoneSteps.setSemafoneDetails(String)"
						}
					},
					{
						"result": {
							"duration": 318767658,
							"status": "passed"
						},
						"name": "the agent clicks on the Credit Card Number input field",
						"keyword": "And ",
						"line": 32,
						"match": {
							"arguments": [
								{
									"val": "Credit Card Number",
									"offset": 24
								}
							],
							"location": "ChangePaymentSteps.agentClicksOnInputField(String)"
						}
					},
					{
						"result": {
							"duration": 2486321064,
							"status": "passed"
						},
						"name": "the agent clicks on the Reset All button",
						"keyword": "When ",
						"line": 33,
						"match": {
							"arguments": [
								{
									"val": "Reset All",
									"offset": 24
								}
							],
							"location": "SemafoneSteps.clickButton(String)"
						}
					},
					{
						"result": {
							"duration": 305747572,
							"status": "passed"
						},
						"name": "a reset request is sent",
						"keyword": "Then ",
						"line": 34,
						"match": {
							"location": "SemafoneSteps.assertResetRequest()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 916218570,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "authorise-payment-using-semafone;agent-can-click-on-the-clear-button-whilst-receiving-security-code-info-from-semafone-and-this-will-clear-the-field",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 36
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 36
					}
				],
				"before": [
					{
						"result": {
							"duration": 7787033952,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Agent can click on the clear button whilst receiving security code info from Semafone and this will clear the field",
				"keyword": "Scenario",
				"line": 37,
				"steps": [
					{
						"result": {
							"duration": 3915641416,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 38,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 17613363,
							"status": "passed"
						},
						"name": "we are setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 39,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 46
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 407775522,
							"status": "passed"
						},
						"name": "the agent is connected to Semafone [with SemafoneCr 1015]",
						"keyword": "And ",
						"line": 40,
						"match": {
							"arguments": [
								{
									"val": "1015",
									"offset": 52
								}
							],
							"location": "SemafoneSteps.setSemafoneDetails(String)"
						}
					},
					{
						"result": {
							"duration": 302063371,
							"status": "passed"
						},
						"name": "the agent clicks on the Credit Card Number input field",
						"keyword": "And ",
						"line": 41,
						"match": {
							"arguments": [
								{
									"val": "Credit Card Number",
									"offset": 24
								}
							],
							"location": "ChangePaymentSteps.agentClicksOnInputField(String)"
						}
					},
					{
						"result": {
							"duration": 2577737967,
							"status": "passed"
						},
						"name": "the agent clicks on the Clear button to reset the Security Code field",
						"keyword": "When ",
						"line": 42,
						"match": {
							"location": "SemafoneSteps.clearSecurityCode()"
						}
					},
					{
						"result": {
							"duration": 305428624,
							"status": "passed"
						},
						"name": "a reset request is sent",
						"keyword": "Then ",
						"line": 43,
						"match": {
							"location": "SemafoneSteps.assertResetRequest()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 957783361,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "authorise-payment-using-semafone;if-the-agent-clicks-on-the-override-button,-the-override-event-is-stored",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 45
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 45
					}
				],
				"before": [
					{
						"result": {
							"duration": 7310021332,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent clicks on the Override button, the Override event is stored",
				"keyword": "Scenario",
				"line": 46,
				"steps": [
					{
						"result": {
							"duration": 3974248962,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 47,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 17535272,
							"status": "passed"
						},
						"name": "we are setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 48,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 46
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 421544764,
							"status": "passed"
						},
						"name": "the agent is connected to Semafone [with SemafoneCr 1006]",
						"keyword": "And ",
						"line": 49,
						"match": {
							"arguments": [
								{
									"val": "1006",
									"offset": 52
								}
							],
							"location": "SemafoneSteps.setSemafoneDetails(String)"
						}
					},
					{
						"result": {
							"duration": 1787837152,
							"status": "passed"
						},
						"name": "the agent clicks on the Override button",
						"keyword": "When ",
						"line": 50,
						"match": {
							"arguments": [
								{
									"val": "Override",
									"offset": 24
								}
							],
							"location": "SemafoneSteps.clickButton(String)"
						}
					},
					{
						"result": {
							"duration": 59602915,
							"status": "passed"
						},
						"name": "the mute call instructions are displayed - \"In Order to maintain BSkyB\u0027s compliance with mandatory industry requirements (PCI DSS) call recording must be manually muted before capturing payment card details vocally from the customer. Double click the Agent Management Console icon in your system tray (bottom of your monitor screen). Select \"Mute Recording\". Click Confirm to acknowledge that you have muted call recording.\"",
						"keyword": "Then ",
						"line": 51,
						"match": {
							"arguments": [
								{
									"val": "mute",
									"offset": 4
								},
								{
									"val": "In Order to maintain BSkyB\u0027s compliance with mandatory industry requirements (PCI DSS) call recording must be manually muted before capturing payment card details vocally from the customer. Double click the Agent Management Console icon in your system tray (bottom of your monitor screen). Select \"Mute Recording\". Click Confirm to acknowledge that you have muted call recording.",
									"offset": 44
								}
							],
							"location": "SemafoneSteps.muteMessage(String,String)"
						}
					},
					{
						"result": {
							"duration": 1320116097,
							"status": "passed"
						},
						"name": "the agent acknowledges the mute call message",
						"keyword": "And ",
						"line": 52,
						"match": {
							"arguments": [
								{
									"val": "mute",
									"offset": 27
								}
							],
							"location": "SemafoneSteps.muteMessageAcknowledged(String)"
						}
					},
					{
						"result": {
							"duration": 300170654,
							"status": "passed"
						},
						"name": "the input fields become enabled",
						"keyword": "And ",
						"line": 53,
						"match": {
							"location": "SemafoneSteps.inputFieldsEnabled()"
						}
					},
					{
						"result": {
							"duration": 157162101,
							"status": "passed"
						},
						"name": "the agent enters the first six digits of a valid card number [411111]",
						"keyword": "And ",
						"line": 54,
						"match": {
							"arguments": [
								{
									"val": "411111",
									"offset": 62
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardNumberFirstDigits(String)"
						}
					},
					{
						"result": {
							"duration": 915975691,
							"status": "passed"
						},
						"name": "the Visa logo is displayed",
						"keyword": "And ",
						"line": 55,
						"match": {
							"arguments": [
								{
									"val": "Visa",
									"offset": 4
								}
							],
							"location": "ChangePaymentSteps.cardTypeLogoDisplayed(String)"
						}
					},
					{
						"result": {
							"duration": 205890938,
							"status": "passed"
						},
						"name": "the agent enters the missing digits of the card number [1111111111]",
						"keyword": "And ",
						"line": 56,
						"match": {
							"arguments": [
								{
									"val": "1111111111",
									"offset": 56
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardNumberLastDigits(String)"
						}
					},
					{
						"result": {
							"duration": 572519329,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 12/18",
						"keyword": "And ",
						"line": 57,
						"match": {
							"arguments": [
								{
									"val": "12/18",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 687481721,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 58,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 167840320,
							"status": "passed"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 59,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"duration": 519487195,
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 60,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"duration": 55831870,
							"status": "passed"
						},
						"name": "the Amount field is not editable",
						"keyword": "And ",
						"line": 61,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationFieldDisabled()"
						}
					},
					{
						"result": {
							"duration": 4318944290,
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "And ",
						"line": 62,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 60685970,
							"status": "passed"
						},
						"name": "the unmute call instructions are displayed - \"For training and quality purposes you must resume call recording on completion of capturing payment details. Double click the Agent Management Console icon in your system tray (bottom of your monitor screen). Select \"Start Recording\". Click Confirm to acknowledge that you have un-muted call recording.\"",
						"keyword": "Then ",
						"line": 63,
						"match": {
							"arguments": [
								{
									"val": "unmute",
									"offset": 4
								},
								{
									"val": "For training and quality purposes you must resume call recording on completion of capturing payment details. Double click the Agent Management Console icon in your system tray (bottom of your monitor screen). Select \"Start Recording\". Click Confirm to acknowledge that you have un-muted call recording.",
									"offset": 46
								}
							],
							"location": "SemafoneSteps.muteMessage(String,String)"
						}
					},
					{
						"result": {
							"duration": 1324691589,
							"status": "passed"
						},
						"name": "the agent acknowledges the unmute call message",
						"keyword": "And ",
						"line": 64,
						"match": {
							"arguments": [
								{
									"val": "unmute",
									"offset": 27
								}
							],
							"location": "SemafoneSteps.muteMessageAcknowledged(String)"
						}
					},
					{
						"result": {
							"duration": 53808628,
							"status": "passed"
						},
						"name": "we can see the blank screen of successful payment authorisation",
						"keyword": "And ",
						"line": 65,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationSuccess()"
						}
					},
					{
						"result": {
							"duration": 331926218,
							"status": "passed"
						},
						"name": "the semafone events are successfully audited using the Genesys ID comming from Chordiant [Event: \"Override\"]",
						"keyword": "And ",
						"line": 66,
						"match": {
							"arguments": [
								{
									"val": "Override",
									"offset": 98
								}
							],
							"location": "SemafoneSteps.assertSemafoneEventType(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 905641595,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "authorise-payment-using-semafone;error-message-for-invalid-card-details-must-be-displayed-the-same-way-as-for-manual-entry",
				"tags": [
					{
						"name": "@UnhappyPath",
						"line": 68
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 68
					}
				],
				"description": "",
				"name": "Error message for invalid card details must be displayed the same way as for manual entry",
				"keyword": "Scenario",
				"line": 69,
				"steps": [
					{
						"result": {
							"duration": 3838455145,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 70,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 17803988,
							"status": "passed"
						},
						"name": "we are setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 71,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 46
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 398070560,
							"status": "passed"
						},
						"name": "the agent is connected to Semafone [with SemafoneCr 1013]",
						"keyword": "And ",
						"line": 72,
						"match": {
							"arguments": [
								{
									"val": "1013",
									"offset": 52
								}
							],
							"location": "SemafoneSteps.setSemafoneDetails(String)"
						}
					},
					{
						"result": {
							"duration": 302388485,
							"status": "passed"
						},
						"name": "the agent clicks on the Credit Card Number input field",
						"keyword": "And ",
						"line": 73,
						"match": {
							"arguments": [
								{
									"val": "Credit Card Number",
									"offset": 24
								}
							],
							"location": "ChangePaymentSteps.agentClicksOnInputField(String)"
						}
					},
					{
						"result": {
							"duration": 2000342343,
							"status": "passed"
						},
						"name": "there is an error in Semafone",
						"keyword": "But ",
						"line": 74,
						"match": {
							"location": "SemafoneSteps.semafoneError()"
						}
					},
					{
						"result": {
							"duration": 359911044,
							"status": "passed"
						},
						"name": "the error message \"An error has occurred and the details cannot be captured. Try again later\" is displayed in the payment authorisation screen",
						"keyword": "Then ",
						"line": 75,
						"match": {
							"arguments": [
								{
									"val": "An error has occurred and the details cannot be captured. Try again later",
									"offset": 19
								},
								{
									"val": "payment authorisation",
									"offset": 114
								}
							],
							"location": "SemafoneSteps.errorMessage(String,String)"
						}
					}
				],
				"type": "scenario"
			}
		],
		"uri": "paymentAuthorisationSemafone.feature"
	},
	{
		"id": "payment-authorisation-semafone-events",
		"tags": [
			{
				"name": "@PaymentsAuthorisationModule",
				"line": 1
			},
			{
				"name": "@PaymentAuthorisationSemafoneEvents",
				"line": 1
			},
			{
				"name": "@NightlyBuild-Modules",
				"line": 1
			}
		],
		"description": "As a CSR Agent, I want the Billing View to store the corresponding payment authorisation Semafone Events in Chordiant database",
		"name": "Payment Authorisation Semafone Events",
		"keyword": "Feature",
		"line": 2,
		"elements": [
			{
				"after": [
					{
						"result": {
							"duration": 1200809156,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-semafone-events;if-semafone-is-in-disaster-recovery-mode,-the-manual-event-is-stored",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 6
					}
				],
				"before": [
					{
						"result": {
							"duration": 7300094515,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					},
					{
						"result": {
							"duration": 7306026318,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If Semafone is in disaster recovery mode, the Manual event is stored",
				"keyword": "Scenario",
				"line": 7,
				"steps": [
					{
						"result": {
							"duration": 3954572659,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 8,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 18500649,
							"status": "passed"
						},
						"name": "we are setting the full payment details for a UK customer with an accountNumber [621142414526]",
						"keyword": "And ",
						"line": 9,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 46
								},
								{
									"val": "621142414526",
									"offset": 81
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String,String)"
						}
					},
					{
						"result": {
							"duration": 380389079,
							"status": "passed"
						},
						"name": "Semafone is in disaster recovery mode",
						"keyword": "But ",
						"line": 10,
						"match": {
							"location": "SemafoneSteps.semafoneDisasterRecovery()"
						}
					},
					{
						"result": {
							"duration": 188817930,
							"status": "passed"
						},
						"name": "the agent enters the Credit Card Number 4111111111111111 of type Visa",
						"keyword": "And ",
						"line": 11,
						"match": {
							"arguments": [
								{
									"val": "4111111111111111",
									"offset": 40
								},
								{
									"val": "Visa",
									"offset": 65
								}
							],
							"location": "TakePaymentSteps.agentEntersCardNumber(String,String)"
						}
					},
					{
						"result": {
							"duration": 748353734,
							"status": "passed"
						},
						"name": "the agent changes the card holder name to Steven Wilson",
						"keyword": "And ",
						"line": 12,
						"match": {
							"arguments": [
								{
									"val": "Steven Wilson",
									"offset": 42
								}
							],
							"location": "ChangePaymentSteps.agentEntersCardHolderName(String)"
						}
					},
					{
						"result": {
							"duration": 163708513,
							"status": "passed",
							"error_message": "org.openqa.selenium.InvalidElementStateException: {\"errorMessage\":\"Element is not currently interactable and may not be manipulated\",\"request\":{\"headers\":{\"Accept\":\"application/json, image/png\",\"Connection\":\"Keep-Alive\",\"Content-Length\":\"27\",\"Content-Type\":\"application/json; charset\u003dutf-8\",\"Host\":\"localhost:5547\"},\"httpVersion\":\"1.1\",\"method\":\"POST\",\"post\":\"{\\\"id\\\":\\\":wdc:1449157722989\\\"}\",\"url\":\"/clear\",\"urlParsed\":{\"anchor\":\"\",\"query\":\"\",\"file\":\"clear\",\"directory\":\"/\",\"path\":\"/clear\",\"relative\":\"/clear\",\"port\":\"\",\"host\":\"\",\"password\":\"\",\"user\":\"\",\"userInfo\":\"\",\"authority\":\"\",\"protocol\":\"\",\"source\":\"/clear\",\"queryKey\":{},\"chunks\":[\"clear\"]},\"urlOriginal\":\"/session/4f8506b0-99d5-11e5-941c-5772c6833afb/element/%3Awdc%3A1449157722989/clear\"}}\nCommand duration or timeout: 154 milliseconds\nBuild info: version: \u00272.39.0\u0027, revision: \u002714fa800511cc5d66d426e08b0b2ab926c7ed7398\u0027, time: \u00272013-12-16 13:18:38\u0027\nSystem info: host: \u0027udcsg1lj\u0027, ip: \u0027127.0.1.1\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00272.6.32-358.14.1.el6.x86_64\u0027, java.version: \u00271.7.0_51\u0027\nSession ID: 4f8506b0-99d5-11e5-941c-5772c6833afb\nDriver info: org.openqa.selenium.phantomjs.PhantomJSDriver\nCapabilities [{platform\u003dLINUX, acceptSslCerts\u003dfalse, javascriptEnabled\u003dtrue, browserName\u003dphantomjs, rotatable\u003dfalse, driverVersion\u003d1.2.0, locationContextEnabled\u003dfalse, version\u003d2.0.0, phantomjs.page.settings.loadImages\u003dtrue, cssSelectorsEnabled\u003dtrue, databaseEnabled\u003dfalse, handlesAlerts\u003dfalse, browserConnectionEnabled\u003dfalse, webStorageEnabled\u003dfalse, nativeEvents\u003dtrue, proxy\u003d{proxyType\u003ddirect}, applicationCacheEnabled\u003dfalse, driverName\u003dghostdriver, takesScreenshot\u003dtrue}]\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n\tat sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:57)\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:526)\n\tat org.openqa.selenium.remote.ErrorHandler.createThrowable(ErrorHandler.java:193)\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:145)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:554)\n\tat org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:268)\n\tat org.openqa.selenium.remote.RemoteWebElement.clear(RemoteWebElement.java:113)\n\tat com.bskyb.web.billing.driver.AbstractWebDriver.clear(AbstractWebDriver.java:819)\n\tat com.bskyb.web.billing.steps.TakePaymentSteps.agentEntersSecurityCode(TakePaymentSteps.java:317)\n\tat ✽.And the agent enters a valid security code 123(paymentAuthorisationSemafoneEvents.feature:13)\nCaused by: org.openqa.selenium.remote.ScreenshotException: Screen shot has been taken\nBuild info: version: \u00272.39.0\u0027, revision: \u002714fa800511cc5d66d426e08b0b2ab926c7ed7398\u0027, time: \u00272013-12-16 13:18:38\u0027\nSystem info: host: \u0027udcsg1lj\u0027, ip: \u0027127.0.1.1\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00272.6.32-358.14.1.el6.x86_64\u0027, java.version: \u00271.7.0_51\u0027\nDriver info: driver.version: AbstractWebDriver\n\tat org.openqa.selenium.remote.ErrorHandler.throwIfResponseFailed(ErrorHandler.java:125)\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:554)\n\tat org.openqa.selenium.remote.RemoteWebElement.execute(RemoteWebElement.java:268)\n\tat org.openqa.selenium.remote.RemoteWebElement.clear(RemoteWebElement.java:113)\n\tat com.bskyb.web.billing.driver.AbstractWebDriver.clear(AbstractWebDriver.java:819)\n\tat com.bskyb.web.billing.steps.TakePaymentSteps.agentEntersSecurityCode(TakePaymentSteps.java:317)\n\tat sun.reflect.GeneratedMethodAccessor37.invoke(Unknown Source)\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\n\tat java.lang.reflect.Method.invoke(Method.java:606)\n\tat cucumber.runtime.Utils$1.call(Utils.java:35)\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:12)\n\tat cucumber.runtime.Utils.invoke(Utils.java:31)\n\tat cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:35)\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:38)\n\tat cucumber.runtime.Runtime.runStep(Runtime.java:289)\n\tat cucumber.runtime.model.StepContainer.runStep(StepContainer.java:44)\n\tat cucumber.runtime.model.StepContainer.runSteps(StepContainer.java:39)\n\tat cucumber.runtime.model.CucumberScenario.run(CucumberScenario.java:40)\n\tat cucumber.runtime.junit.ExecutionUnitRunner.run(ExecutionUnitRunner.java:83)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:63)\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:18)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:70)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:82)\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:41)\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:238)\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:63)\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:236)\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:53)\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:229)\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:309)\n\tat cucumber.api.junit.Cucumber.run(Cucumber.java:87)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.execute(JUnit4Provider.java:264)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.executeTestSet(JUnit4Provider.java:153)\n\tat org.apache.maven.surefire.junit4.JUnit4Provider.invoke(JUnit4Provider.java:124)\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:200)\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:153)\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:103)\nCaused by: org.openqa.selenium.InvalidElementStateException: {\"errorMessage\":\"Element is not currently interactable and may not be manipulated\",\"request\":{\"headers\":{\"Accept\":\"application/json, image/png\",\"Connection\":\"Keep-Alive\",\"Content-Length\":\"27\",\"Content-Type\":\"application/json; charset\u003dutf-8\",\"Host\":\"localhost:5547\"},\"httpVersion\":\"1.1\",\"method\":\"POST\",\"post\":\"{\\\"id\\\":\\\":wdc:1449157722989\\\"}\",\"url\":\"/clear\",\"urlParsed\":{\"anchor\":\"\",\"query\":\"\",\"file\":\"clear\",\"directory\":\"/\",\"path\":\"/clear\",\"relative\":\"/clear\",\"port\":\"\",\"host\":\"\",\"password\":\"\",\"user\":\"\",\"userInfo\":\"\",\"authority\":\"\",\"protocol\":\"\",\"source\":\"/clear\",\"queryKey\":{},\"chunks\":[\"clear\"]},\"urlOriginal\":\"/session/4f8506b0-99d5-11e5-941c-5772c6833afb/element/%3Awdc%3A1449157722989/clear\"}}\nBuild info: version: \u00272.39.0\u0027, revision: \u002714fa800511cc5d66d426e08b0b2ab926c7ed7398\u0027, time: \u00272013-12-16 13:18:38\u0027\nSystem info: host: \u0027udcsg1lj\u0027, ip: \u0027127.0.1.1\u0027, os.name: \u0027Linux\u0027, os.arch: \u0027amd64\u0027, os.version: \u00272.6.32-358.14.1.el6.x86_64\u0027, java.version: \u00271.7.0_51\u0027\nDriver info: driver.version: unknown\n"
						},
						"name": "the agent enters a valid security code 123",
						"keyword": "And ",
						"line": 13,
						"match": {
							"arguments": [
								{
									"val": "123",
									"offset": 39
								}
							],
							"location": "TakePaymentSteps.agentEntersSecurityCode(String)"
						}
					},
					{
						"result": {
							"status": "passed"
						},
						"name": "the agent enters a valid expiry date 02/19",
						"keyword": "And ",
						"line": 14,
						"match": {
							"arguments": [
								{
									"val": "02/19",
									"offset": 37
								}
							],
							"location": "ChangePaymentSteps.agentEntersExpiryDate(String)"
						}
					},
					{
						"result": {
							"status": "passed"
						},
						"name": "the Amount field is not editable",
						"keyword": "And ",
						"line": 15,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationFieldDisabled()"
						}
					},
					{
						"result": {
							"status": "passed"
						},
						"name": "the Authorise payment button is clicked to finish the process",
						"keyword": "And ",
						"line": 16,
						"match": {
							"location": "AuthorisePaymentSteps.processPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"status": "passed"
						},
						"name": "we can see the blank screen of successful payment authorisation",
						"keyword": "Then ",
						"line": 17,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationSuccess()"
						}
					},
					{
						"result": {
							"status": "passed"
						},
						"name": "the semafone events are successfully audited using the Genesys ID comming from Chordiant [Event: \"Manual\"]",
						"keyword": "And ",
						"line": 18,
						"match": {
							"arguments": [
								{
									"val": "Manual",
									"offset": 98
								}
							],
							"location": "SemafoneSteps.assertSemafoneEventType(String)"
						}
					}
				],
				"type": "scenario",
				"comments": [
					{
						"value": "# this scenario need to be applied for the specified customer because it exists a mock for disaster recovery mode",
						"line": 5
					}
				]
			},
			{
				"after": [
					{
						"result": {
							"duration": 854010372,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-semafone-events;if-the-agent-clicks-on-the-reset-all-button,-the-reset-event-is-stored-with-the-reset-type-pan",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 20
					}
				],
				"before": [
					{
						"result": {
							"duration": 7290148881,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent clicks on the Reset all button, the Reset event is stored with the Reset Type PAN",
				"keyword": "Scenario",
				"line": 21,
				"steps": [
					{
						"result": {
							"duration": 3861974006,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 22,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 19590469,
							"status": "passed"
						},
						"name": "we are setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 23,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 46
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 429140904,
							"status": "passed"
						},
						"name": "the agent is connected to Semafone [with SemafoneCr 1036]",
						"keyword": "And ",
						"line": 24,
						"match": {
							"arguments": [
								{
									"val": "1036",
									"offset": 52
								}
							],
							"location": "SemafoneSteps.setSemafoneDetails(String)"
						}
					},
					{
						"result": {
							"duration": 299461196,
							"status": "passed"
						},
						"name": "the agent clicks on the Credit Card Number input field",
						"keyword": "And ",
						"line": 25,
						"match": {
							"arguments": [
								{
									"val": "Credit Card Number",
									"offset": 24
								}
							],
							"location": "ChangePaymentSteps.agentClicksOnInputField(String)"
						}
					},
					{
						"result": {
							"duration": 4051594542,
							"status": "passed"
						},
						"name": "the customer starts entering the card details [************123]",
						"keyword": "And ",
						"line": 26,
						"match": {
							"arguments": [
								{
									"val": "************123",
									"offset": 47
								}
							],
							"location": "SemafoneSteps.semafoneDetailsStart(String)"
						}
					},
					{
						"result": {
							"duration": 2240064172,
							"status": "passed"
						},
						"name": "the agent clicks on the Reset All button",
						"keyword": "When ",
						"line": 27,
						"match": {
							"arguments": [
								{
									"val": "Reset All",
									"offset": 24
								}
							],
							"location": "SemafoneSteps.clickButton(String)"
						}
					},
					{
						"result": {
							"duration": 628467063,
							"status": "passed"
						},
						"name": "the semafone events are successfully audited using the Genesys ID comming from Chordiant [Event: \"Reset\", Reset Type: \"PAN\"]",
						"keyword": "Then ",
						"line": 28,
						"match": {
							"arguments": [
								{
									"val": "PAN",
									"offset": 119
								}
							],
							"location": "SemafoneSteps.assertSemafoneEventTypeReset(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 881238763,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-semafone-events;if-the-agent-clicks-on-the-clean-button,-the-reset-event-is-stored-with-the-reset-type-cv2",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 30
					}
				],
				"description": "",
				"name": "If the agent clicks on the Clean button, the Reset event is stored with the Reset Type CV2",
				"keyword": "Scenario",
				"line": 31,
				"steps": [
					{
						"result": {
							"duration": 3991024408,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 32,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 20267582,
							"status": "passed"
						},
						"name": "we are setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 33,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 46
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 418603159,
							"status": "passed"
						},
						"name": "the agent is connected to Semafone [with SemafoneCr 1017]",
						"keyword": "And ",
						"line": 34,
						"match": {
							"arguments": [
								{
									"val": "1017",
									"offset": 52
								}
							],
							"location": "SemafoneSteps.setSemafoneDetails(String)"
						}
					},
					{
						"result": {
							"duration": 296283899,
							"status": "passed"
						},
						"name": "the agent clicks on the Credit Card Number input field",
						"keyword": "And ",
						"line": 35,
						"match": {
							"arguments": [
								{
									"val": "Credit Card Number",
									"offset": 24
								}
							],
							"location": "ChangePaymentSteps.agentClicksOnInputField(String)"
						}
					},
					{
						"result": {
							"duration": 4052519532,
							"status": "passed"
						},
						"name": "the customer starts entering the card details [************1234]",
						"keyword": "And ",
						"line": 36,
						"match": {
							"arguments": [
								{
									"val": "************1234",
									"offset": 47
								}
							],
							"location": "SemafoneSteps.semafoneDetailsStart(String)"
						}
					},
					{
						"result": {
							"duration": 838214555,
							"status": "passed"
						},
						"name": "the agent clicks on the Clear button to reset the Security Code field",
						"keyword": "When ",
						"line": 37,
						"match": {
							"location": "SemafoneSteps.clearSecurityCode()"
						}
					},
					{
						"result": {
							"duration": 633388541,
							"status": "passed"
						},
						"name": "the semafone events are successfully audited using the Genesys ID comming from Chordiant [Event: \"Reset\", Reset Type: \"CV2\"]",
						"keyword": "Then ",
						"line": 38,
						"match": {
							"arguments": [
								{
									"val": "CV2",
									"offset": 119
								}
							],
							"location": "SemafoneSteps.assertSemafoneEventTypeReset(String)"
						}
					}
				],
				"type": "scenario"
			}
		],
		"uri": "paymentAuthorisationSemafoneEvents.feature"
	},
	{
		"id": "payment-authorisation-semafone-status",
		"tags": [
			{
				"name": "@PaymentsAuthorisationModule",
				"line": 1
			},
			{
				"name": "@PaymentAuthorisationSemafoneStatus",
				"line": 1
			},
			{
				"name": "@NightlyBuild-Modules",
				"line": 1
			}
		],
		"description": "As a CSR Agent, I want the Billing View to display the payment authorisation screen according to the Semafone Status",
		"name": "Payment Authorisation Semafone Status",
		"keyword": "Feature",
		"line": 2,
		"elements": [
			{
				"after": [
					{
						"result": {
							"duration": 903691843,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-semafone-status;if-the-agent-is-connected-to-the-telephony-and-has-the-semafone-override-button-action,-the-payment-authorisation-screen-uses-semafone-and-display-the-override-button",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 5
					}
				],
				"before": [
					{
						"result": {
							"duration": 7261268586,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					},
					{
						"result": {
							"duration": 7296400733,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent is connected to the telephony and has the Semafone override button action, the Payment Authorisation screen uses Semafone and display the override button",
				"keyword": "Scenario",
				"line": 6,
				"steps": [
					{
						"result": {
							"duration": 3888307966,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 7,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 336556,
							"status": "passed"
						},
						"name": "the agent has the Semafone override button action",
						"keyword": "And ",
						"line": 8,
						"match": {
							"arguments": [
								{
									"val": "override button",
									"offset": 27
								}
							],
							"location": "SemafoneSteps.agentHaveRoles(String)"
						}
					},
					{
						"result": {
							"duration": 19125711,
							"status": "passed"
						},
						"name": "we are setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 9,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 46
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 397209307,
							"status": "passed"
						},
						"name": "the agent is connected to Semafone [with SemafoneCr 1002]",
						"keyword": "When ",
						"line": 10,
						"match": {
							"arguments": [
								{
									"val": "1002",
									"offset": 52
								}
							],
							"location": "SemafoneSteps.setSemafoneDetails(String)"
						}
					},
					{
						"result": {
							"duration": 58034864,
							"status": "passed"
						},
						"name": "the Override button is displayed",
						"keyword": "Then ",
						"line": 11,
						"match": {
							"location": "SemafoneSteps.overrideButtonDisplayed()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1097019263,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-semafone-status;if-the-agent-is-not-connected-to-the-telephony-and-has-the-semafone-manual-entry-action,-the-payment-authorisation-screen-doesn\u0027t-use-semafone",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 13
					}
				],
				"before": [
					{
						"result": {
							"duration": 7315205090,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent is not connected to the telephony and has the Semafone manual entry action, the Payment Authorisation screen doesn\u0027t use Semafone",
				"keyword": "Scenario",
				"line": 14,
				"steps": [
					{
						"result": {
							"duration": 3859667580,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen",
						"keyword": "Given ",
						"line": 15,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuth()"
						}
					},
					{
						"result": {
							"duration": 313004,
							"status": "passed"
						},
						"name": "the agent has the Semafone manual entry action",
						"keyword": "And ",
						"line": 16,
						"match": {
							"arguments": [
								{
									"val": "manual entry",
									"offset": 27
								}
							],
							"location": "SemafoneSteps.agentHaveRoles(String)"
						}
					},
					{
						"result": {
							"duration": 17816695,
							"status": "passed"
						},
						"name": "we are setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 17,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 46
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 37212,
							"status": "passed"
						},
						"name": "the agent is not connected to Semafone for payment authorisation",
						"keyword": "When ",
						"line": 18,
						"match": {
							"location": "SemafoneSteps.semafoneNotConnectedPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 1183861200,
							"status": "passed"
						},
						"name": "the Override button is not displayed",
						"keyword": "Then ",
						"line": 19,
						"match": {
							"location": "SemafoneSteps.overrideButtonNotDisplayed()"
						}
					},
					{
						"result": {
							"duration": 196204308,
							"status": "passed"
						},
						"name": "the Reset buttons are not displayed",
						"keyword": "And ",
						"line": 20,
						"match": {
							"location": "SemafoneSteps.resetButtonsNotDisplayed()"
						}
					},
					{
						"result": {
							"duration": 322956688,
							"status": "passed"
						},
						"name": "the agent clicks on the Credit Card Number input field",
						"keyword": "And ",
						"line": 21,
						"match": {
							"arguments": [
								{
									"val": "Credit Card Number",
									"offset": 24
								}
							],
							"location": "ChangePaymentSteps.agentClicksOnInputField(String)"
						}
					},
					{
						"result": {
							"duration": 184454715,
							"status": "passed"
						},
						"name": "the agent can introduce manually a card number",
						"keyword": "And ",
						"line": 22,
						"match": {
							"location": "SemafoneSteps.cardIntroducedManually()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 974987324,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-semafone-status;if-the-agent-is-connected-to-the-telephony-but-doesn\u0027t-have-the-semafone-override-button-action,-the-payment-authorisation-screen-uses-semafone-but-doesn\u0027t-display-the-override-button",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 24
					}
				],
				"before": [
					{
						"result": {
							"duration": 7286304934,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent is connected to the telephony but doesn\u0027t have the Semafone override button action, the Payment Authorisation screen uses Semafone but doesn\u0027t display the override button",
				"keyword": "Scenario",
				"line": 25,
				"steps": [
					{
						"result": {
							"duration": 27050453049,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen without the Semafone override button action",
						"keyword": "Given ",
						"line": 26,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuthWithoutSemafoneOverrideAction()"
						}
					},
					{
						"result": {
							"duration": 18045456,
							"status": "passed"
						},
						"name": "we are setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 27,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 46
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 412012904,
							"status": "passed"
						},
						"name": "the agent is connected to Semafone [with SemafoneCr 1061]",
						"keyword": "When ",
						"line": 28,
						"match": {
							"arguments": [
								{
									"val": "1061",
									"offset": 52
								}
							],
							"location": "SemafoneSteps.setSemafoneDetails(String)"
						}
					},
					{
						"result": {
							"duration": 66104550,
							"status": "passed"
						},
						"name": "the Override button is not displayed",
						"keyword": "Then ",
						"line": 29,
						"match": {
							"location": "SemafoneSteps.overrideButtonNotDisplayed()"
						}
					},
					{
						"result": {
							"duration": 336957419,
							"status": "passed"
						},
						"name": "the agent clicks on the Credit Card Number input field",
						"keyword": "And ",
						"line": 30,
						"match": {
							"arguments": [
								{
									"val": "Credit Card Number",
									"offset": 24
								}
							],
							"location": "ChangePaymentSteps.agentClicksOnInputField(String)"
						}
					},
					{
						"result": {
							"duration": 13729723457,
							"status": "passed"
						},
						"name": "the customer has entered the details of a valid Visa credit card using Semafone [************1111]",
						"keyword": "And ",
						"line": 31,
						"match": {
							"arguments": [
								{
									"val": "Visa",
									"offset": 48
								},
								{
									"val": "************1111",
									"offset": 81
								}
							],
							"location": "SemafoneSteps.customerEntersCardDetails(String,String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1105581766,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-semafone-status;if-the-agent-is-not-connected-to-the-telephony-and-doesn\u0027t-have-the-semafone-manual-entry-action,-the-payment-authorisation-screen-doesn\u0027t-use-semafone-and-the-pages-display-the-use-nothing-message",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 33
					}
				],
				"before": [
					{
						"result": {
							"duration": 7286525241,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "If the agent is not connected to the telephony and doesn\u0027t have the Semafone manual entry action, the Payment Authorisation screen doesn\u0027t use Semafone and the pages display the use nothing message",
				"keyword": "Scenario",
				"line": 34,
				"steps": [
					{
						"result": {
							"duration": 3863058437,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen without the Semafone manual entry action",
						"keyword": "Given ",
						"line": 35,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuthWithoutSemafoneManualEntryAction()"
						}
					},
					{
						"result": {
							"duration": 17436416,
							"status": "passed"
						},
						"name": "we are setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 36,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 46
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String)"
						}
					},
					{
						"result": {
							"duration": 240661,
							"status": "passed"
						},
						"name": "the agent is not connected to Semafone for payment authorisation",
						"keyword": "When ",
						"line": 37,
						"match": {
							"location": "SemafoneSteps.semafoneNotConnectedPaymentAuthorisation()"
						}
					},
					{
						"result": {
							"duration": 1837955550,
							"status": "passed"
						},
						"name": "the error message \"Unable to locate active phone call, You are not authorised to enter manual payment details\" is displayed within the Payment Authorisation screen",
						"keyword": "Then ",
						"line": 38,
						"match": {
							"arguments": [
								{
									"val": "Unable to locate active phone call, You are not authorised to enter manual payment details",
									"offset": 19
								}
							],
							"location": "AuthorisePaymentSteps.paymentAuthorisationErrorMessageDisplayed(String)"
						}
					},
					{
						"result": {
							"duration": 572166467,
							"status": "passed"
						},
						"name": "the Payment Authorisation fields are all disabled",
						"keyword": "And ",
						"line": 39,
						"match": {
							"location": "AuthorisePaymentSteps.allPaymentAuthorisationFieldsDisabled()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1195346221,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "payment-authorisation-semafone-status;if-semafone-is-in-disaster-recovery-mode,-the-payment-authorisation-screen-doesn\u0027t-use-semafone-and-it-can-be-used-manually-regardless-the-agent-roles.",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 41
					}
				],
				"description": "",
				"name": "If Semafone is in disaster recovery mode, the Payment Authorisation screen doesn\u0027t use Semafone and it can be used manually regardless the agent roles.",
				"keyword": "Scenario",
				"line": 42,
				"steps": [
					{
						"result": {
							"duration": 3881265908,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen without the Semafone manual entry action",
						"keyword": "Given ",
						"line": 43,
						"match": {
							"location": "AuthorisePaymentSteps.loginPaymentAuthWithoutSemafoneManualEntryAction()"
						}
					},
					{
						"result": {
							"duration": 18089276,
							"status": "passed"
						},
						"name": "we are setting the full payment details for a UK customer with an accountNumber [621142414526]",
						"keyword": "And ",
						"line": 44,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 19
								},
								{
									"val": "UK",
									"offset": 46
								},
								{
									"val": "621142414526",
									"offset": 81
								}
							],
							"location": "AuthorisePaymentSteps.setAuthPayloadDefault(String,String,String)"
						}
					},
					{
						"result": {
							"duration": 386036926,
							"status": "passed"
						},
						"name": "Semafone is in disaster recovery mode",
						"keyword": "But ",
						"line": 45,
						"match": {
							"location": "SemafoneSteps.semafoneDisasterRecovery()"
						}
					},
					{
						"result": {
							"duration": 151735445,
							"status": "passed",
							"error_message": "java.lang.AssertionError: The element paymentAuthSecurityCodeInput is disabled\n\tat org.junit.Assert.fail(Assert.java:88)\n\tat com.bskyb.web.billing.driver.AbstractWebDriver.isEnabled(AbstractWebDriver.java:835)\n\tat com.bskyb.web.billing.steps.AuthorisePaymentSteps.allPaymentAuthorisationFieldsEnabled(AuthorisePaymentSteps.java:147)\n\tat ✽.Then the Payment Authorisation fields are all enabled(paymentAuthorisationSemafoneStatus.feature:46)\n"
						},
						"name": "the Payment Authorisation fields are all enabled",
						"keyword": "Then ",
						"line": 46,
						"match": {
							"location": "AuthorisePaymentSteps.allPaymentAuthorisationFieldsEnabled()"
						}
					},
					{
						"result": {
							"status": "passed"
						},
						"name": "the agent can introduce manually a card number",
						"keyword": "And ",
						"line": 47,
						"match": {
							"location": "SemafoneSteps.cardIntroducedManually()"
						}
					},
					{
						"result": {
							"status": "passed"
						},
						"name": "the Override button is not displayed",
						"keyword": "And ",
						"line": 48,
						"match": {
							"location": "SemafoneSteps.overrideButtonNotDisplayed()"
						}
					},
					{
						"result": {
							"status": "passed"
						},
						"name": "the Reset buttons are not displayed",
						"keyword": "And ",
						"line": 49,
						"match": {
							"location": "SemafoneSteps.resetButtonsNotDisplayed()"
						},
						"output": [
							"\n",
							"SCENARIO No: 51",
							"\u003cdiv class\u003d\"failed\"\u003e\u003cspan class\u003d\"step-keyword\"\u003eJavascript console logs\u003c/span\u003e\u003cdiv class\u003d\"step-error-message\"\u003e\u003cpre\u003e[15:51:06:144] Console Sniffer Started Injected Version\n[15:51:08:725] --\u0026gt; [GET] https://mybox.bskyb.com:8081/cbs-payments-web/payments/rest/basic/621142414526/basicData\n[15:51:08:748] --\u0026gt; [GET] /cbs-payments-web/payments/rest/billing/getStoredPreviousCardDetails?accountNumber\u003d621142414526\n[15:51:08:751] \u0026lt;-- [GET] https://mybox.bskyb.com:8081/cbs-payments-web/payments/rest/basic/621142414526/basicData | statusCode: 200 \u0026lt;1162 bytes received\u0026gt;\n[15:51:08:763] \u0026lt;-- [GET] /cbs-payments-web/payments/rest/billing/getStoredPreviousCardDetails?accountNumber\u003d621142414526 | statusCode: 200 \u0026lt;11 bytes received\u0026gt;\n[15:51:08:823] --\u0026gt; [GET] /cbs-payments-web/payments/rest/actions/13152260429900870689729/getSemafoneStatus?semafoneCR\u003ddisaster666\n[15:51:08:858] \u0026lt;-- [GET] /cbs-payments-web/payments/rest/actions/13152260429900870689729/getSemafoneStatus?semafoneCR\u003ddisaster666 | statusCode: 200 \u0026lt;117 bytes received\u0026gt;\u003c/pre\u003e\u003c/div\u003e\u003c/div\u003e"
						]
					}
				],
				"type": "scenario"
			}
		],
		"uri": "paymentAuthorisationSemafoneStatus.feature"
	},
	{
		"id": "authorise-payment-using-semafone-and-setting-details-in-aurora-mock-from-aurora",
		"tags": [
			{
				"name": "@PaymentsAuthorisationModule",
				"line": 1
			},
			{
				"name": "@NightlyBuild-Modules",
				"line": 1
			}
		],
		"description": "",
		"name": "Authorise payment using Semafone and setting details in Aurora Mock from Aurora",
		"keyword": "Feature",
		"line": 3,
		"elements": [
			{
				"after": [
					{
						"result": {
							"duration": 873493593,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "authorise-payment-using-semafone-and-setting-details-in-aurora-mock-from-aurora;aurora/chordiant-is-providing-semafone-details-to-the-payment-authorisation-module,-when-the-agent-interacts-with-the-module-semafone-details-are-returned",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 5
					}
				],
				"before": [
					{
						"result": {
							"duration": 7317515107,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					},
					{
						"result": {
							"duration": 7272197804,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Aurora/Chordiant is providing Semafone details to the Payment Authorisation module, when the agent interacts with the module Semafone details are returned",
				"keyword": "Scenario",
				"line": 6,
				"steps": [
					{
						"result": {
							"duration": 5716631032,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 7,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 234575696,
							"status": "passed"
						},
						"name": "Aurora provides Semafone details [with SemafoneCr 1001]",
						"keyword": "And ",
						"line": 8,
						"match": {
							"arguments": [
								{
									"val": "1001",
									"offset": 50
								}
							],
							"location": "SemafoneSteps.setSemafoneAurora(String)"
						}
					},
					{
						"result": {
							"duration": 1047111568,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 9,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 1006894040,
							"status": "passed"
						},
						"name": "the consumer is setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 10,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 28
								},
								{
									"val": "UK",
									"offset": 55
								}
							],
							"location": "AuthorisePaymentSteps.setPaymentAuthDetailsWithConsumerMock(String,String)"
						}
					},
					{
						"result": {
							"duration": 1046787739,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "When ",
						"line": 11,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 4841058931,
							"status": "passed"
						},
						"name": "the module gets Semafone details",
						"keyword": "Then ",
						"line": 12,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationModuleGetSemafoneDetails()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 938399570,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "authorise-payment-using-semafone-and-setting-details-in-aurora-mock-from-aurora;after-aurora-provided-semafone-details-and-pam-received-data-from-semafone,-if-the-module-is-accessed-again,-semafone-details-are-asked-again-and-refreshed",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 14
					}
				],
				"before": [
					{
						"result": {
							"duration": 7319700061,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "After Aurora provided Semafone details and PAM received data from Semafone, if the module is accessed again, Semafone details are asked again and refreshed",
				"keyword": "Scenario",
				"line": 15,
				"steps": [
					{
						"result": {
							"duration": 5716470729,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 16,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 284400143,
							"status": "passed"
						},
						"name": "Aurora provides Semafone details [with SemafoneCr 1091]",
						"keyword": "And ",
						"line": 17,
						"match": {
							"arguments": [
								{
									"val": "1091",
									"offset": 50
								}
							],
							"location": "SemafoneSteps.setSemafoneAurora(String)"
						}
					},
					{
						"result": {
							"duration": 7943909118,
							"status": "passed"
						},
						"name": "the agent had a successful semafone journey for some payment details",
						"keyword": "When ",
						"line": 18,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithPAM()"
						}
					},
					{
						"result": {
							"duration": 3205983498,
							"status": "passed"
						},
						"name": "the consumer is setting new semafone and new payment details [with SemafoneCr 1081]",
						"keyword": "And ",
						"line": 19,
						"match": {
							"arguments": [
								{
									"val": "1081",
									"offset": 78
								}
							],
							"location": "AuthorisePaymentSteps.setNewPaymentAuthDetails(String)"
						}
					},
					{
						"result": {
							"duration": 4316304216,
							"status": "passed"
						},
						"name": "the module gets new Semafone details",
						"keyword": "Then ",
						"line": 20,
						"match": {
							"location": "AuthorisePaymentSteps.paymentAuthorisationModuleGetNewSemafoneDetails()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 878855725,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "authorise-payment-using-semafone-and-setting-details-in-aurora-mock-from-aurora;interacting-with-aurora,-agent-can-click-on-the-clear-button-whilst-receiving-security-code-info-from-semafone-and-this-will-clear-the-field",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 25
					}
				],
				"before": [
					{
						"result": {
							"duration": 7355025798,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Interacting with Aurora, agent can click on the clear button whilst receiving security code info from Semafone and this will clear the field",
				"keyword": "Scenario",
				"line": 26,
				"steps": [
					{
						"result": {
							"duration": 5654352459,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 27,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 245616200,
							"status": "passed"
						},
						"name": "Aurora provides Semafone details [with SemafoneCr 1025]",
						"keyword": "And ",
						"line": 28,
						"match": {
							"arguments": [
								{
									"val": "1025",
									"offset": 50
								}
							],
							"location": "SemafoneSteps.setSemafoneAurora(String)"
						}
					},
					{
						"result": {
							"duration": 1047364309,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 29,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 1007415507,
							"status": "passed"
						},
						"name": "the consumer is setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 30,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 28
								},
								{
									"val": "UK",
									"offset": 55
								}
							],
							"location": "AuthorisePaymentSteps.setPaymentAuthDetailsWithConsumerMock(String,String)"
						}
					},
					{
						"result": {
							"duration": 1047008905,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "And ",
						"line": 31,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 291867928,
							"status": "passed"
						},
						"name": "the agent clicks on the Credit Card Number input field",
						"keyword": "And ",
						"line": 32,
						"match": {
							"arguments": [
								{
									"val": "Credit Card Number",
									"offset": 24
								}
							],
							"location": "ChangePaymentSteps.agentClicksOnInputField(String)"
						}
					},
					{
						"result": {
							"duration": 2579305300,
							"status": "passed"
						},
						"name": "the agent clicks on the Clear button to reset the Security Code field",
						"keyword": "When ",
						"line": 33,
						"match": {
							"location": "SemafoneSteps.clearSecurityCode()"
						}
					},
					{
						"result": {
							"duration": 305513274,
							"status": "passed"
						},
						"name": "a reset request is sent",
						"keyword": "Then ",
						"line": 34,
						"match": {
							"location": "SemafoneSteps.assertResetRequest()"
						}
					}
				],
				"type": "scenario",
				"comments": [
					{
						"value": "####################################### Test for BCW-691 ##########################",
						"line": 23
					}
				]
			},
			{
				"after": [
					{
						"result": {
							"duration": 886568847,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "authorise-payment-using-semafone-and-setting-details-in-aurora-mock-from-aurora;interacting-with-aurora,-if-the-agent-clicks-on-the-reset-all-button,-the-reset-event-is-stored-with-the-reset-type-pan",
				"tags": [
					{
						"name": "@HappyPath",
						"line": 36
					}
				],
				"before": [
					{
						"result": {
							"duration": 11279511992,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "Interacting with Aurora, if the agent clicks on the Reset all button, the Reset event is stored with the Reset Type PAN",
				"keyword": "Scenario",
				"line": 37,
				"steps": [
					{
						"result": {
							"duration": 5709598877,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 38,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 250100652,
							"status": "passed"
						},
						"name": "Aurora provides Semafone details [with SemafoneCr 1036]",
						"keyword": "And ",
						"line": 39,
						"match": {
							"arguments": [
								{
									"val": "1036",
									"offset": 50
								}
							],
							"location": "SemafoneSteps.setSemafoneAurora(String)"
						}
					},
					{
						"result": {
							"duration": 1047669601,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 40,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 1006789437,
							"status": "passed"
						},
						"name": "the consumer is setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 41,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 28
								},
								{
									"val": "UK",
									"offset": 55
								}
							],
							"location": "AuthorisePaymentSteps.setPaymentAuthDetailsWithConsumerMock(String,String)"
						}
					},
					{
						"result": {
							"duration": 1046929484,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "And ",
						"line": 42,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 291765416,
							"status": "passed"
						},
						"name": "the agent clicks on the Credit Card Number input field",
						"keyword": "And ",
						"line": 43,
						"match": {
							"arguments": [
								{
									"val": "Credit Card Number",
									"offset": 24
								}
							],
							"location": "ChangePaymentSteps.agentClicksOnInputField(String)"
						}
					},
					{
						"result": {
							"duration": 4052729892,
							"status": "passed"
						},
						"name": "the customer starts entering the card details [************123]",
						"keyword": "And ",
						"line": 44,
						"match": {
							"arguments": [
								{
									"val": "************123",
									"offset": 47
								}
							],
							"location": "SemafoneSteps.semafoneDetailsStart(String)"
						}
					},
					{
						"result": {
							"duration": 2251260334,
							"status": "passed"
						},
						"name": "the agent clicks on the Reset All button",
						"keyword": "When ",
						"line": 45,
						"match": {
							"arguments": [
								{
									"val": "Reset All",
									"offset": 24
								}
							],
							"location": "SemafoneSteps.clickButton(String)"
						}
					},
					{
						"result": {
							"duration": 614841139,
							"status": "passed"
						},
						"name": "the semafone events are successfully audited using the Genesys ID comming from Chordiant [Event: \"Reset\", Reset Type: \"PAN\"]",
						"keyword": "Then ",
						"line": 46,
						"match": {
							"arguments": [
								{
									"val": "PAN",
									"offset": 119
								}
							],
							"location": "SemafoneSteps.assertSemafoneEventTypeReset(String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 923288837,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "authorise-payment-using-semafone-and-setting-details-in-aurora-mock-from-aurora;interacting-with-aurora,-error-message-for-invalid-card-details-must-be-displayed-the-same-way-as-for-manual-entry",
				"tags": [
					{
						"name": "@UnhappyPath",
						"line": 48
					}
				],
				"description": "",
				"name": "Interacting with Aurora, Error message for invalid card details must be displayed the same way as for manual entry",
				"keyword": "Scenario",
				"line": 49,
				"steps": [
					{
						"result": {
							"duration": 5629283919,
							"status": "passed"
						},
						"name": "the CSR is logged in the Payment Authorisation screen using the Consumer Mock",
						"keyword": "Given ",
						"line": 50,
						"match": {
							"location": "AuthorisePaymentSteps.userOnPaymentAuthWithConsumerMock()"
						}
					},
					{
						"result": {
							"duration": 306819648,
							"status": "passed"
						},
						"name": "Aurora provides Semafone details [with SemafoneCr 1013]",
						"keyword": "And ",
						"line": 51,
						"match": {
							"arguments": [
								{
									"val": "1013",
									"offset": 50
								}
							],
							"location": "SemafoneSteps.setSemafoneAurora(String)"
						}
					},
					{
						"result": {
							"duration": 1047771329,
							"status": "passed"
						},
						"name": "internally aurora starts the interaction with the consumer",
						"keyword": "And ",
						"line": 52,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithConsumer()"
						}
					},
					{
						"result": {
							"duration": 1006985582,
							"status": "passed"
						},
						"name": "the consumer is setting the full payment details for a UK customer",
						"keyword": "And ",
						"line": 53,
						"match": {
							"arguments": [
								{
									"val": "full",
									"offset": 28
								},
								{
									"val": "UK",
									"offset": 55
								}
							],
							"location": "AuthorisePaymentSteps.setPaymentAuthDetailsWithConsumerMock(String,String)"
						}
					},
					{
						"result": {
							"duration": 1047135158,
							"status": "passed"
						},
						"name": "the agent starts the interaction with the module",
						"keyword": "And ",
						"line": 54,
						"match": {
							"location": "AuthorisePaymentSteps.startsInteractionWithModule()"
						}
					},
					{
						"result": {
							"duration": 294812799,
							"status": "passed"
						},
						"name": "the agent clicks on the Credit Card Number input field",
						"keyword": "And ",
						"line": 55,
						"match": {
							"arguments": [
								{
									"val": "Credit Card Number",
									"offset": 24
								}
							],
							"location": "ChangePaymentSteps.agentClicksOnInputField(String)"
						}
					},
					{
						"result": {
							"duration": 2000320201,
							"status": "passed"
						},
						"name": "there is an error in Semafone",
						"keyword": "But ",
						"line": 56,
						"match": {
							"location": "SemafoneSteps.semafoneError()"
						}
					},
					{
						"result": {
							"duration": 360093936,
							"status": "passed"
						},
						"name": "the error message \"An error has occurred and the details cannot be captured. Try again later\" is displayed in the payment authorisation screen",
						"keyword": "Then ",
						"line": 57,
						"match": {
							"arguments": [
								{
									"val": "An error has occurred and the details cannot be captured. Try again later",
									"offset": 19
								},
								{
									"val": "payment authorisation",
									"offset": 114
								}
							],
							"location": "SemafoneSteps.errorMessage(String,String)"
						}
					}
				],
				"type": "scenario"
			}
		],
		"uri": "paymentAuthorisationSemafoneWithAurora.feature"
	},
	{
		"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details",
		"tags": [
			{
				"name": "@IDV",
				"line": 1
			},
			{
				"name": "@PaymentDetailsSearch",
				"line": 1
			}
		],
		"description": "",
		"name": "ID\u0026V Module - As An agent I want to be able to find customers by it\u0027s payment details so I can ID\u0026V them by using those details",
		"keyword": "Feature",
		"line": 2,
		"elements": [
			{
				"after": [
					{
						"result": {
							"duration": 1122735500,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;when-an-agent-with-limited-access-role-enters-the-id\u0026v-website-to-perform-a-payment-details-search,-the-limited-radio-button-menu-appears",
				"tags": [
					{
						"name": "@IDV",
						"line": 5
					},
					{
						"name": "@HappyPath",
						"line": 5
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 5
					}
				],
				"before": [
					{
						"result": {
							"duration": 7296550660,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					},
					{
						"result": {
							"duration": 7291025198,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "When an agent with limited access role enters the ID\u0026V website to perform a Payment Details Search, the limited radio button menu appears",
				"keyword": "Scenario",
				"line": 6,
				"steps": [
					{
						"result": {
							"duration": 3209300486,
							"status": "passed"
						},
						"name": "the CSR is logged in the ID\u0026V website without the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 7,
						"match": {
							"arguments": [
								{
									"val": "without",
									"offset": 38
								}
							],
							"location": "IdvStepDefinitions.logInIdvRoleLogin(String)"
						}
					},
					{
						"result": {
							"duration": 1123483,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "When ",
						"line": 8,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 238625124,
							"status": "passed"
						},
						"name": "\"Sort Code\" option is selected by default",
						"keyword": "Then ",
						"line": 9,
						"match": {
							"arguments": [
								{
									"val": "Sort Code",
									"offset": 1
								}
							],
							"location": "IdvStepDefinitions.assertDefaultRadioButtonSelected(String)"
						}
					},
					{
						"result": {
							"duration": 388739684,
							"status": "passed"
						},
						"name": "\"Sort Code\" and \"Bank account No.\" fields are displayed",
						"keyword": "And ",
						"line": 10,
						"match": {
							"location": "IdvStepDefinitions.assertSortCodeFields()"
						}
					},
					{
						"result": {
							"duration": 97979054,
							"status": "passed"
						},
						"name": "the ID\u0026V Search button is disabled",
						"keyword": "And ",
						"line": 11,
						"match": {
							"arguments": [
								{
									"val": "disabled",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.assertSearchButtonStatus(String)"
						}
					},
					{
						"result": {
							"duration": 2441966390,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 3 following options and for each option its related input fields:",
						"keyword": "And ",
						"line": 12,
						"match": {
							"arguments": [
								{
									"val": "3",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenuAndField(int,String\u003e)"
						},
						"output": [
							"The inputOption and related fields to be asserted are : Sort Code\n",
							"The inputOption and related fields to be asserted are : IBAN\n",
							"The inputOption and related fields to be asserted are : UMR\n"
						],
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 13
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 14
							},
							{
								"cells": [
									"UMR"
								],
								"line": 15
							}
						]
					}
				],
				"type": "scenario",
				"comments": [
					{
						"value": "#Happy Paths",
						"line": 4
					}
				]
			},
			{
				"after": [
					{
						"result": {
							"duration": 1070148280,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;when-an-agent-with-unlimited-access-role-enters-the-id\u0026v-website-to-perform-a-payment-details-search,-the-full-radio-button-menu-appears",
				"tags": [
					{
						"name": "@IDV",
						"line": 17
					},
					{
						"name": "@HappyPath",
						"line": 17
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 17
					}
				],
				"before": [
					{
						"result": {
							"duration": 7362559889,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "When an agent with unlimited access role enters the ID\u0026V website to perform a Payment Details Search, the full radio button menu appears",
				"keyword": "Scenario",
				"line": 18,
				"steps": [
					{
						"result": {
							"duration": 3218074170,
							"status": "passed"
						},
						"name": "the CSR is logged in the ID\u0026V website with the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 19,
						"match": {
							"arguments": [
								{
									"val": "with",
									"offset": 38
								}
							],
							"location": "IdvStepDefinitions.logInIdvRoleLogin(String)"
						}
					},
					{
						"result": {
							"duration": 1107061,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "When ",
						"line": 20,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 3196795819,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 4 following options and for each option its related input fields:",
						"keyword": "Then ",
						"line": 21,
						"match": {
							"arguments": [
								{
									"val": "4",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenuAndField(int,String\u003e)"
						},
						"output": [
							"The inputOption and related fields to be asserted are : Sort Code\n",
							"The inputOption and related fields to be asserted are : Credit Card No.\n",
							"The inputOption and related fields to be asserted are : IBAN\n",
							"The inputOption and related fields to be asserted are : UMR\n"
						],
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 22
							},
							{
								"cells": [
									"Credit Card No."
								],
								"line": 23
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 24
							},
							{
								"cells": [
									"UMR"
								],
								"line": 25
							}
						]
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1090500507,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;when-an-agent-with-unlimited-access-role-enters-the-id\u0026v-website-to-perform-a-payment-details-search,-he-has-to-provide-an-input-value-for-the-selected-option-to-enable-the-search;;2",
				"tags": [
					{
						"name": "@PaymentDetailsSearch",
						"line": 1
					},
					{
						"name": "@IDV",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 27
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 27
					}
				],
				"before": [
					{
						"result": {
							"duration": 7292910803,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "When an agent with unlimited access role enters the ID\u0026V website to perform a Payment Details Search, he has to provide an input value for the selected option to enable the search",
				"keyword": "Scenario Outline",
				"line": 44,
				"steps": [
					{
						"result": {
							"duration": 3216551021,
							"status": "passed"
						},
						"name": "the CSR is logged in the ID\u0026V website with the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 29,
						"match": {
							"arguments": [
								{
									"val": "with",
									"offset": 38
								}
							],
							"location": "IdvStepDefinitions.logInIdvRoleLogin(String)"
						}
					},
					{
						"result": {
							"duration": 1120435,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "When ",
						"line": 30,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 744016383,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 4 following options:",
						"keyword": "And ",
						"line": 31,
						"match": {
							"arguments": [
								{
									"val": "4",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenu(int,String\u003e)"
						},
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 32
							},
							{
								"cells": [
									"Credit Card No."
								],
								"line": 33
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 34
							},
							{
								"cells": [
									"UMR"
								],
								"line": 35
							}
						]
					},
					{
						"result": {
							"duration": 461050640,
							"status": "passed"
						},
						"name": "the agent selects the IDV IBAN option",
						"keyword": "And ",
						"line": 36,
						"match": {
							"arguments": [
								{
									"val": "IBAN",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.setIdvRadioButtonOption(String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 813522725,
							"status": "passed"
						},
						"name": "the agent enters a valid IDV IBAN \"111222333\"",
						"keyword": "And ",
						"line": 37,
						"match": {
							"arguments": [
								{
									"val": "valid",
									"offset": 19
								},
								{
									"val": "IBAN",
									"offset": 29
								},
								{
									"val": "111222333",
									"offset": 35
								}
							],
							"location": "IdvStepDefinitions.agentEntersValues(String,String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 95758482,
							"status": "passed"
						},
						"name": "the ID\u0026V Search button is enabled",
						"keyword": "Then ",
						"line": 38,
						"match": {
							"arguments": [
								{
									"val": "enabled",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.assertSearchButtonStatus(String)"
						}
					},
					{
						"result": {
							"duration": 1179989477,
							"status": "passed"
						},
						"name": "the agent clicks on the IDV search button",
						"keyword": "And ",
						"line": 39,
						"match": {
							"arguments": [
								{
									"val": "search",
									"offset": 28
								}
							],
							"location": "IdvStepDefinitions.clickOnIdvButton(String)"
						}
					},
					{
						"result": {
							"duration": 50737958,
							"status": "passed"
						},
						"name": "the \"111222333\" is not cleared in the field",
						"keyword": "And ",
						"line": 40,
						"match": {
							"arguments": [
								{
									"val": "111222333",
									"offset": 5
								}
							],
							"location": "IdvStepDefinitions.searchFieldContent(String)"
						},
						"matchedColumns": [
							1
						]
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1101401818,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;when-an-agent-with-unlimited-access-role-enters-the-id\u0026v-website-to-perform-a-payment-details-search,-he-has-to-provide-an-input-value-for-the-selected-option-to-enable-the-search;;3",
				"tags": [
					{
						"name": "@PaymentDetailsSearch",
						"line": 1
					},
					{
						"name": "@IDV",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 27
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 27
					}
				],
				"before": [
					{
						"result": {
							"duration": 7306728244,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "When an agent with unlimited access role enters the ID\u0026V website to perform a Payment Details Search, he has to provide an input value for the selected option to enable the search",
				"keyword": "Scenario Outline",
				"line": 45,
				"steps": [
					{
						"result": {
							"duration": 3222459601,
							"status": "passed"
						},
						"name": "the CSR is logged in the ID\u0026V website with the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 29,
						"match": {
							"arguments": [
								{
									"val": "with",
									"offset": 38
								}
							],
							"location": "IdvStepDefinitions.logInIdvRoleLogin(String)"
						}
					},
					{
						"result": {
							"duration": 1135152,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "When ",
						"line": 30,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 748964219,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 4 following options:",
						"keyword": "And ",
						"line": 31,
						"match": {
							"arguments": [
								{
									"val": "4",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenu(int,String\u003e)"
						},
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 32
							},
							{
								"cells": [
									"Credit Card No."
								],
								"line": 33
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 34
							},
							{
								"cells": [
									"UMR"
								],
								"line": 35
							}
						]
					},
					{
						"result": {
							"duration": 458145199,
							"status": "passed"
						},
						"name": "the agent selects the IDV Credit Card No. option",
						"keyword": "And ",
						"line": 36,
						"match": {
							"arguments": [
								{
									"val": "Credit Card No.",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.setIdvRadioButtonOption(String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 809450674,
							"status": "passed"
						},
						"name": "the agent enters a valid IDV Credit Card No. \"444555666\"",
						"keyword": "And ",
						"line": 37,
						"match": {
							"arguments": [
								{
									"val": "valid",
									"offset": 19
								},
								{
									"val": "Credit Card No.",
									"offset": 29
								},
								{
									"val": "444555666",
									"offset": 46
								}
							],
							"location": "IdvStepDefinitions.agentEntersValues(String,String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 95177877,
							"status": "passed"
						},
						"name": "the ID\u0026V Search button is enabled",
						"keyword": "Then ",
						"line": 38,
						"match": {
							"arguments": [
								{
									"val": "enabled",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.assertSearchButtonStatus(String)"
						}
					},
					{
						"result": {
							"duration": 1179955630,
							"status": "passed"
						},
						"name": "the agent clicks on the IDV search button",
						"keyword": "And ",
						"line": 39,
						"match": {
							"arguments": [
								{
									"val": "search",
									"offset": 28
								}
							],
							"location": "IdvStepDefinitions.clickOnIdvButton(String)"
						}
					},
					{
						"result": {
							"duration": 50738821,
							"status": "passed"
						},
						"name": "the \"444555666\" is not cleared in the field",
						"keyword": "And ",
						"line": 40,
						"match": {
							"arguments": [
								{
									"val": "444555666",
									"offset": 5
								}
							],
							"location": "IdvStepDefinitions.searchFieldContent(String)"
						},
						"matchedColumns": [
							1
						]
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1086146175,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;when-an-agent-with-unlimited-access-role-enters-the-id\u0026v-website-to-perform-a-payment-details-search,-he-has-to-provide-an-input-value-for-the-selected-option-to-enable-the-search;;4",
				"tags": [
					{
						"name": "@PaymentDetailsSearch",
						"line": 1
					},
					{
						"name": "@IDV",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 27
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 27
					}
				],
				"before": [
					{
						"result": {
							"duration": 7330041535,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "When an agent with unlimited access role enters the ID\u0026V website to perform a Payment Details Search, he has to provide an input value for the selected option to enable the search",
				"keyword": "Scenario Outline",
				"line": 46,
				"steps": [
					{
						"result": {
							"duration": 3199819467,
							"status": "passed"
						},
						"name": "the CSR is logged in the ID\u0026V website with the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 29,
						"match": {
							"arguments": [
								{
									"val": "with",
									"offset": 38
								}
							],
							"location": "IdvStepDefinitions.logInIdvRoleLogin(String)"
						}
					},
					{
						"result": {
							"duration": 1121078,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "When ",
						"line": 30,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 748293404,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 4 following options:",
						"keyword": "And ",
						"line": 31,
						"match": {
							"arguments": [
								{
									"val": "4",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenu(int,String\u003e)"
						},
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 32
							},
							{
								"cells": [
									"Credit Card No."
								],
								"line": 33
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 34
							},
							{
								"cells": [
									"UMR"
								],
								"line": 35
							}
						]
					},
					{
						"result": {
							"duration": 458218125,
							"status": "passed"
						},
						"name": "the agent selects the IDV UMR option",
						"keyword": "And ",
						"line": 36,
						"match": {
							"arguments": [
								{
									"val": "UMR",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.setIdvRadioButtonOption(String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 825511556,
							"status": "passed"
						},
						"name": "the agent enters a valid IDV UMR \"777888999\"",
						"keyword": "And ",
						"line": 37,
						"match": {
							"arguments": [
								{
									"val": "valid",
									"offset": 19
								},
								{
									"val": "UMR",
									"offset": 29
								},
								{
									"val": "777888999",
									"offset": 34
								}
							],
							"location": "IdvStepDefinitions.agentEntersValues(String,String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 95956424,
							"status": "passed"
						},
						"name": "the ID\u0026V Search button is enabled",
						"keyword": "Then ",
						"line": 38,
						"match": {
							"arguments": [
								{
									"val": "enabled",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.assertSearchButtonStatus(String)"
						}
					},
					{
						"result": {
							"duration": 1179989459,
							"status": "passed"
						},
						"name": "the agent clicks on the IDV search button",
						"keyword": "And ",
						"line": 39,
						"match": {
							"arguments": [
								{
									"val": "search",
									"offset": 28
								}
							],
							"location": "IdvStepDefinitions.clickOnIdvButton(String)"
						}
					},
					{
						"result": {
							"duration": 51828982,
							"status": "passed"
						},
						"name": "the \"777888999\" is not cleared in the field",
						"keyword": "And ",
						"line": 40,
						"match": {
							"arguments": [
								{
									"val": "777888999",
									"offset": 5
								}
							],
							"location": "IdvStepDefinitions.searchFieldContent(String)"
						},
						"matchedColumns": [
							1
						]
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1111932799,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;an-agent-enters-the-id\u0026v-website-and-performs-a-successful-payment-details-search-using-the-customer\u0027s-sortcode",
				"tags": [
					{
						"name": "@IDV",
						"line": 48
					},
					{
						"name": "@HappyPath",
						"line": 48
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 48
					}
				],
				"before": [
					{
						"result": {
							"duration": 7289220815,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "An agent enters the ID\u0026V website and performs a successful Payment Details Search using the customer\u0027s sortcode",
				"keyword": "Scenario",
				"line": 49,
				"steps": [
					{
						"result": {
							"duration": 3198684915,
							"status": "passed"
						},
						"name": "the CSR is logged in the ID\u0026V website with the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 50,
						"match": {
							"arguments": [
								{
									"val": "with",
									"offset": 38
								}
							],
							"location": "IdvStepDefinitions.logInIdvRoleLogin(String)"
						}
					},
					{
						"result": {
							"duration": 1112487,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "And ",
						"line": 51,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 759147176,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 4 following options:",
						"keyword": "And ",
						"line": 52,
						"match": {
							"arguments": [
								{
									"val": "4",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenu(int,String\u003e)"
						},
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 53
							},
							{
								"cells": [
									"Credit Card No."
								],
								"line": 54
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 55
							},
							{
								"cells": [
									"UMR"
								],
								"line": 56
							}
						]
					},
					{
						"result": {
							"duration": 467987308,
							"status": "passed"
						},
						"name": "the agent selects the IDV Sort Code option",
						"keyword": "When ",
						"line": 57,
						"match": {
							"arguments": [
								{
									"val": "Sort Code",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.setIdvRadioButtonOption(String)"
						}
					},
					{
						"result": {
							"duration": 447734008,
							"status": "passed"
						},
						"name": "the agent enters a valid IDV Sort Code \"12345\"",
						"keyword": "Then ",
						"line": 58,
						"match": {
							"arguments": [
								{
									"val": "valid",
									"offset": 19
								},
								{
									"val": "Sort Code",
									"offset": 29
								},
								{
									"val": "12345",
									"offset": 40
								}
							],
							"location": "IdvStepDefinitions.agentEntersValues(String,String,String)"
						}
					},
					{
						"result": {
							"duration": 124058411,
							"status": "passed"
						},
						"name": "the agent enters a valid Bank Account No. \"987654321\"",
						"keyword": "And ",
						"line": 59,
						"match": {
							"arguments": [
								{
									"val": "987654321",
									"offset": 43
								}
							],
							"location": "IdvStepDefinitions.agentEntersValidDetails(String)"
						}
					},
					{
						"result": {
							"duration": 1182012767,
							"status": "passed"
						},
						"name": "the agent clicks on the IDV search button",
						"keyword": "And ",
						"line": 60,
						"match": {
							"arguments": [
								{
									"val": "search",
									"offset": 28
								}
							],
							"location": "IdvStepDefinitions.clickOnIdvButton(String)"
						}
					},
					{
						"result": {
							"duration": 142578537,
							"status": "passed"
						},
						"name": "the Sort Code \"12345\" and Bank Account No. \"987654321\" values are not cleared in the fields",
						"keyword": "And ",
						"line": 61,
						"match": {
							"arguments": [
								{
									"val": "12345",
									"offset": 15
								},
								{
									"val": "987654321",
									"offset": 44
								}
							],
							"location": "IdvStepDefinitions.searchSortCodeFieldsContent(String,String)"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1138438143,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;an-agent-performs-a-customer-search-with--with-a-valid-umr-search-item-type-and-send-the-result-data-to-aurora",
				"tags": [
					{
						"name": "@IDV",
						"line": 78
					},
					{
						"name": "@HappyPath",
						"line": 78
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 78
					}
				],
				"before": [
					{
						"result": {
							"duration": 7310651545,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "An agent performs a customer search with  with a valid UMR search item type and send the result data to Aurora",
				"keyword": "Scenario",
				"line": 79,
				"steps": [
					{
						"result": {
							"duration": 5039514776,
							"status": "passed"
						},
						"name": "the CSR is logged in Aurora using the ID\u0026V website with the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 80,
						"match": {
							"arguments": [
								{
									"val": "with",
									"offset": 51
								}
							],
							"location": "IdvStepDefinitions.userOnIdAndVWithinAurora(String)"
						}
					},
					{
						"result": {
							"duration": 1132854,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "And ",
						"line": 81,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 710022219,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 4 following options:",
						"keyword": "And ",
						"line": 82,
						"match": {
							"arguments": [
								{
									"val": "4",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenu(int,String\u003e)"
						},
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 83
							},
							{
								"cells": [
									"Credit Card No."
								],
								"line": 84
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 85
							},
							{
								"cells": [
									"UMR"
								],
								"line": 86
							}
						]
					},
					{
						"result": {
							"duration": 459105074,
							"status": "passed"
						},
						"name": "the agent selects the IDV UMR option",
						"keyword": "When ",
						"line": 87,
						"match": {
							"arguments": [
								{
									"val": "UMR",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.setIdvRadioButtonOption(String)"
						}
					},
					{
						"result": {
							"duration": 1279433340,
							"status": "passed"
						},
						"name": "the agent enters a valid IDV UMR \"MRCWYA30047192\"",
						"keyword": "And ",
						"line": 88,
						"match": {
							"arguments": [
								{
									"val": "valid",
									"offset": 19
								},
								{
									"val": "UMR",
									"offset": 29
								},
								{
									"val": "MRCWYA30047192",
									"offset": 34
								}
							],
							"location": "IdvStepDefinitions.agentEntersValues(String,String,String)"
						}
					},
					{
						"result": {
							"duration": 1180063637,
							"status": "passed"
						},
						"name": "the agent clicks on the IDV search button",
						"keyword": "And ",
						"line": 89,
						"match": {
							"arguments": [
								{
									"val": "search",
									"offset": 28
								}
							],
							"location": "IdvStepDefinitions.clickOnIdvButton(String)"
						}
					},
					{
						"result": {
							"duration": 91786602,
							"status": "passed"
						},
						"name": "the search returns 1 data result of customer",
						"keyword": "Then ",
						"line": 90,
						"match": {
							"arguments": [
								{
									"val": "1",
									"offset": 19
								},
								{
									"val": "t",
									"offset": 31
								},
								{
									"val": "customer",
									"offset": 36
								}
							],
							"location": "IdvStepDefinitions.assertNoOfDataReturnedBySearch(int,String,String)"
						}
					},
					{
						"result": {
							"duration": 38256,
							"status": "passed"
						},
						"name": "the data are correctly sent to Aurora",
						"keyword": "And ",
						"line": 91,
						"match": {
							"location": "IdvStepDefinitions.dataSentToAurora()"
						}
					}
				],
				"type": "scenario",
				"comments": [
					{
						"value": "##################### Communication with Aurora #################################",
						"line": 76
					}
				]
			},
			{
				"after": [
					{
						"result": {
							"duration": 1076043547,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;an-agent-performs-a-customer-search-with-a-valid-iban-and-send-the-result-data-to-aurora",
				"tags": [
					{
						"name": "@IDV",
						"line": 93
					},
					{
						"name": "@HappyPath",
						"line": 93
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 93
					}
				],
				"before": [
					{
						"result": {
							"duration": 15506677830,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "An agent performs a customer search with a valid IBAN and send the result data to Aurora",
				"keyword": "Scenario",
				"line": 94,
				"steps": [
					{
						"result": {
							"duration": 5050207242,
							"status": "passed"
						},
						"name": "the CSR is logged in Aurora using the ID\u0026V website with the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 95,
						"match": {
							"arguments": [
								{
									"val": "with",
									"offset": 51
								}
							],
							"location": "IdvStepDefinitions.userOnIdAndVWithinAurora(String)"
						}
					},
					{
						"result": {
							"duration": 1119488,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "And ",
						"line": 96,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 705845482,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 4 following options:",
						"keyword": "And ",
						"line": 97,
						"match": {
							"arguments": [
								{
									"val": "4",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenu(int,String\u003e)"
						},
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 98
							},
							{
								"cells": [
									"Credit Card No."
								],
								"line": 99
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 100
							},
							{
								"cells": [
									"UMR"
								],
								"line": 101
							}
						]
					},
					{
						"result": {
							"duration": 457882591,
							"status": "passed"
						},
						"name": "the agent selects the IDV IBAN option",
						"keyword": "When ",
						"line": 102,
						"match": {
							"arguments": [
								{
									"val": "IBAN",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.setIdvRadioButtonOption(String)"
						}
					},
					{
						"result": {
							"duration": 2034588546,
							"status": "passed"
						},
						"name": "the agent enters a valid IDV IBAN \"IE74BOFI90177366084833\"",
						"keyword": "And ",
						"line": 103,
						"match": {
							"arguments": [
								{
									"val": "valid",
									"offset": 19
								},
								{
									"val": "IBAN",
									"offset": 29
								},
								{
									"val": "IE74BOFI90177366084833",
									"offset": 35
								}
							],
							"location": "IdvStepDefinitions.agentEntersValues(String,String,String)"
						}
					},
					{
						"result": {
							"duration": 1181789138,
							"status": "passed"
						},
						"name": "the agent clicks on the IDV search button",
						"keyword": "And ",
						"line": 104,
						"match": {
							"arguments": [
								{
									"val": "search",
									"offset": 28
								}
							],
							"location": "IdvStepDefinitions.clickOnIdvButton(String)"
						}
					},
					{
						"result": {
							"duration": 90675852,
							"status": "passed"
						},
						"name": "the search returns 5 data results of customer",
						"keyword": "Then ",
						"line": 105,
						"match": {
							"arguments": [
								{
									"val": "5",
									"offset": 19
								},
								{
									"val": "ts",
									"offset": 31
								},
								{
									"val": "customer",
									"offset": 37
								}
							],
							"location": "IdvStepDefinitions.assertNoOfDataReturnedBySearch(int,String,String)"
						}
					},
					{
						"result": {
							"duration": 33457,
							"status": "passed"
						},
						"name": "the data are correctly sent to Aurora",
						"keyword": "And ",
						"line": 106,
						"match": {
							"location": "IdvStepDefinitions.dataSentToAurora()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1099133821,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;an-agent-performs-a-customer-search-with-a-valid-combination-sort-code-and-account-number-and-send-the-result-data-to-aurora",
				"tags": [
					{
						"name": "@IDV",
						"line": 108
					},
					{
						"name": "@HappyPath",
						"line": 108
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 108
					}
				],
				"before": [
					{
						"result": {
							"duration": 7303568137,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "An agent performs a customer search with a valid combination Sort code and account number and send the result data to Aurora",
				"keyword": "Scenario",
				"line": 109,
				"steps": [
					{
						"result": {
							"duration": 5237140549,
							"status": "passed"
						},
						"name": "the CSR is logged in Aurora using the ID\u0026V website with the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 110,
						"match": {
							"arguments": [
								{
									"val": "with",
									"offset": 51
								}
							],
							"location": "IdvStepDefinitions.userOnIdAndVWithinAurora(String)"
						}
					},
					{
						"result": {
							"duration": 1120575,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "And ",
						"line": 111,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 701850627,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 4 following options:",
						"keyword": "And ",
						"line": 112,
						"match": {
							"arguments": [
								{
									"val": "4",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenu(int,String\u003e)"
						},
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 113
							},
							{
								"cells": [
									"Credit Card No."
								],
								"line": 114
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 115
							},
							{
								"cells": [
									"UMR"
								],
								"line": 116
							}
						]
					},
					{
						"result": {
							"duration": 457093963,
							"status": "passed"
						},
						"name": "the agent selects the IDV Sort Code option",
						"keyword": "When ",
						"line": 117,
						"match": {
							"arguments": [
								{
									"val": "Sort Code",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.setIdvRadioButtonOption(String)"
						}
					},
					{
						"result": {
							"duration": 542642669,
							"status": "passed"
						},
						"name": "the agent enters a valid IDV Sort Code \"089000\"",
						"keyword": "And ",
						"line": 118,
						"match": {
							"arguments": [
								{
									"val": "valid",
									"offset": 19
								},
								{
									"val": "Sort Code",
									"offset": 29
								},
								{
									"val": "089000",
									"offset": 40
								}
							],
							"location": "IdvStepDefinitions.agentEntersValues(String,String,String)"
						}
					},
					{
						"result": {
							"duration": 119981361,
							"status": "passed"
						},
						"name": "the agent enters a valid Bank Account No. \"66374958\"",
						"keyword": "And ",
						"line": 119,
						"match": {
							"arguments": [
								{
									"val": "66374958",
									"offset": 43
								}
							],
							"location": "IdvStepDefinitions.agentEntersValidDetails(String)"
						}
					},
					{
						"result": {
							"duration": 29741924240,
							"status": "passed"
						},
						"name": "the agent clicks on the IDV search button",
						"keyword": "And ",
						"line": 120,
						"match": {
							"arguments": [
								{
									"val": "search",
									"offset": 28
								}
							],
							"location": "IdvStepDefinitions.clickOnIdvButton(String)"
						}
					},
					{
						"result": {
							"duration": 84851135,
							"status": "passed"
						},
						"name": "the search returns 317 data results of customer",
						"keyword": "Then ",
						"line": 121,
						"match": {
							"arguments": [
								{
									"val": "317",
									"offset": 19
								},
								{
									"val": "ts",
									"offset": 33
								},
								{
									"val": "customer",
									"offset": 39
								}
							],
							"location": "IdvStepDefinitions.assertNoOfDataReturnedBySearch(int,String,String)"
						}
					},
					{
						"result": {
							"duration": 34151,
							"status": "passed"
						},
						"name": "the data are correctly sent to Aurora",
						"keyword": "And ",
						"line": 122,
						"match": {
							"location": "IdvStepDefinitions.dataSentToAurora()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1111213125,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;an-agent-performs-a-customer-search-with-a-valid-credit-card-no.-number-search-item-type-and-send-the-result-data-to-aurora",
				"tags": [
					{
						"name": "@IDV",
						"line": 124
					},
					{
						"name": "@HappyPath",
						"line": 124
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 124
					}
				],
				"before": [
					{
						"result": {
							"duration": 7318232961,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "An agent performs a customer search with a valid Credit Card No. number search item type and send the result data to Aurora",
				"keyword": "Scenario",
				"line": 125,
				"steps": [
					{
						"result": {
							"duration": 5060951281,
							"status": "passed"
						},
						"name": "the CSR is logged in Aurora using the ID\u0026V website with the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 126,
						"match": {
							"arguments": [
								{
									"val": "with",
									"offset": 51
								}
							],
							"location": "IdvStepDefinitions.userOnIdAndVWithinAurora(String)"
						}
					},
					{
						"result": {
							"duration": 1136534,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "And ",
						"line": 127,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 703817564,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 4 following options:",
						"keyword": "And ",
						"line": 128,
						"match": {
							"arguments": [
								{
									"val": "4",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenu(int,String\u003e)"
						},
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 129
							},
							{
								"cells": [
									"Credit Card No."
								],
								"line": 130
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 131
							},
							{
								"cells": [
									"UMR"
								],
								"line": 132
							}
						]
					},
					{
						"result": {
							"duration": 457573712,
							"status": "passed"
						},
						"name": "the agent selects the IDV Credit Card No. option",
						"keyword": "When ",
						"line": 133,
						"match": {
							"arguments": [
								{
									"val": "Credit Card No.",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.setIdvRadioButtonOption(String)"
						}
					},
					{
						"result": {
							"duration": 1449595342,
							"status": "passed"
						},
						"name": "the agent enters a valid IDV Credit Card No. \"5471420918342675\"",
						"keyword": "And ",
						"line": 134,
						"match": {
							"arguments": [
								{
									"val": "valid",
									"offset": 19
								},
								{
									"val": "Credit Card No.",
									"offset": 29
								},
								{
									"val": "5471420918342675",
									"offset": 46
								}
							],
							"location": "IdvStepDefinitions.agentEntersValues(String,String,String)"
						}
					},
					{
						"result": {
							"duration": 92021978903,
							"status": "passed"
						},
						"name": "the agent clicks on the IDV search button",
						"keyword": "And ",
						"line": 135,
						"match": {
							"arguments": [
								{
									"val": "search",
									"offset": 28
								}
							],
							"location": "IdvStepDefinitions.clickOnIdvButton(String)"
						}
					},
					{
						"result": {
							"duration": 110448635,
							"status": "passed"
						},
						"name": "the search returns data",
						"keyword": "Then ",
						"line": 136,
						"match": {
							"arguments": [
								{
									"val": "returns",
									"offset": 11
								}
							],
							"location": "IdvStepDefinitions.assertDataReturnedBySearch(String)"
						}
					},
					{
						"result": {
							"duration": 33534,
							"status": "passed"
						},
						"name": "the data are correctly sent to Aurora",
						"keyword": "And ",
						"line": 137,
						"match": {
							"location": "IdvStepDefinitions.dataSentToAurora()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1110710895,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;an-agent-performs-a-customer-search-with-incorrect-data-which-return-an-empty-result-and-send-it-to-aurora;;2",
				"tags": [
					{
						"name": "@PaymentDetailsSearch",
						"line": 1
					},
					{
						"name": "@IDV",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 139
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 139
					}
				],
				"before": [
					{
						"result": {
							"duration": 7303928721,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "An agent performs a customer search with incorrect data which return an empty result and send it to Aurora",
				"keyword": "Scenario Outline",
				"line": 156,
				"steps": [
					{
						"result": {
							"duration": 5064255344,
							"status": "passed"
						},
						"name": "the CSR is logged in Aurora using the ID\u0026V website with the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 141,
						"match": {
							"arguments": [
								{
									"val": "with",
									"offset": 51
								}
							],
							"location": "IdvStepDefinitions.userOnIdAndVWithinAurora(String)"
						}
					},
					{
						"result": {
							"duration": 1126750,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "And ",
						"line": 142,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 702244408,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 4 following options:",
						"keyword": "And ",
						"line": 143,
						"match": {
							"arguments": [
								{
									"val": "4",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenu(int,String\u003e)"
						},
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 144
							},
							{
								"cells": [
									"Credit Card No."
								],
								"line": 145
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 146
							},
							{
								"cells": [
									"UMR"
								],
								"line": 147
							}
						]
					},
					{
						"result": {
							"duration": 457051793,
							"status": "passed"
						},
						"name": "the agent selects the IDV IBAN option",
						"keyword": "When ",
						"line": 148,
						"match": {
							"arguments": [
								{
									"val": "IBAN",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.setIdvRadioButtonOption(String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 803764656,
							"status": "passed"
						},
						"name": "the agent enters a invalid IDV IBAN \"111222333\"",
						"keyword": "And ",
						"line": 149,
						"match": {
							"arguments": [
								{
									"val": "invalid",
									"offset": 19
								},
								{
									"val": "IBAN",
									"offset": 31
								},
								{
									"val": "111222333",
									"offset": 37
								}
							],
							"location": "IdvStepDefinitions.agentEntersValues(String,String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 1185056260,
							"status": "passed"
						},
						"name": "the agent clicks on the IDV search button",
						"keyword": "And ",
						"line": 150,
						"match": {
							"arguments": [
								{
									"val": "search",
									"offset": 28
								}
							],
							"location": "IdvStepDefinitions.clickOnIdvButton(String)"
						}
					},
					{
						"result": {
							"duration": 90839051,
							"status": "passed"
						},
						"name": "the search returns 0 data results of customer",
						"keyword": "Then ",
						"line": 151,
						"match": {
							"arguments": [
								{
									"val": "0",
									"offset": 19
								},
								{
									"val": "ts",
									"offset": 31
								},
								{
									"val": "customer",
									"offset": 37
								}
							],
							"location": "IdvStepDefinitions.assertNoOfDataReturnedBySearch(int,String,String)"
						}
					},
					{
						"result": {
							"duration": 32412,
							"status": "passed"
						},
						"name": "the data are correctly sent to Aurora",
						"keyword": "And ",
						"line": 152,
						"match": {
							"location": "IdvStepDefinitions.dataSentToAurora()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1088592347,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;an-agent-performs-a-customer-search-with-incorrect-data-which-return-an-empty-result-and-send-it-to-aurora;;3",
				"tags": [
					{
						"name": "@PaymentDetailsSearch",
						"line": 1
					},
					{
						"name": "@IDV",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 139
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 139
					}
				],
				"before": [
					{
						"result": {
							"duration": 7274084541,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "An agent performs a customer search with incorrect data which return an empty result and send it to Aurora",
				"keyword": "Scenario Outline",
				"line": 157,
				"steps": [
					{
						"result": {
							"duration": 5021673890,
							"status": "passed"
						},
						"name": "the CSR is logged in Aurora using the ID\u0026V website with the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 141,
						"match": {
							"arguments": [
								{
									"val": "with",
									"offset": 51
								}
							],
							"location": "IdvStepDefinitions.userOnIdAndVWithinAurora(String)"
						}
					},
					{
						"result": {
							"duration": 1130331,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "And ",
						"line": 142,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 702343298,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 4 following options:",
						"keyword": "And ",
						"line": 143,
						"match": {
							"arguments": [
								{
									"val": "4",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenu(int,String\u003e)"
						},
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 144
							},
							{
								"cells": [
									"Credit Card No."
								],
								"line": 145
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 146
							},
							{
								"cells": [
									"UMR"
								],
								"line": 147
							}
						]
					},
					{
						"result": {
							"duration": 457560568,
							"status": "passed"
						},
						"name": "the agent selects the IDV Credit Card No. option",
						"keyword": "When ",
						"line": 148,
						"match": {
							"arguments": [
								{
									"val": "Credit Card No.",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.setIdvRadioButtonOption(String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 814746693,
							"status": "passed"
						},
						"name": "the agent enters a invalid IDV Credit Card No. \"444555666\"",
						"keyword": "And ",
						"line": 149,
						"match": {
							"arguments": [
								{
									"val": "invalid",
									"offset": 19
								},
								{
									"val": "Credit Card No.",
									"offset": 31
								},
								{
									"val": "444555666",
									"offset": 48
								}
							],
							"location": "IdvStepDefinitions.agentEntersValues(String,String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 1181039023,
							"status": "passed"
						},
						"name": "the agent clicks on the IDV search button",
						"keyword": "And ",
						"line": 150,
						"match": {
							"arguments": [
								{
									"val": "search",
									"offset": 28
								}
							],
							"location": "IdvStepDefinitions.clickOnIdvButton(String)"
						}
					},
					{
						"result": {
							"duration": 90556596,
							"status": "passed"
						},
						"name": "the search returns 0 data results of customer",
						"keyword": "Then ",
						"line": 151,
						"match": {
							"arguments": [
								{
									"val": "0",
									"offset": 19
								},
								{
									"val": "ts",
									"offset": 31
								},
								{
									"val": "customer",
									"offset": 37
								}
							],
							"location": "IdvStepDefinitions.assertNoOfDataReturnedBySearch(int,String,String)"
						}
					},
					{
						"result": {
							"duration": 33003,
							"status": "passed"
						},
						"name": "the data are correctly sent to Aurora",
						"keyword": "And ",
						"line": 152,
						"match": {
							"location": "IdvStepDefinitions.dataSentToAurora()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1108269032,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;an-agent-performs-a-customer-search-with-incorrect-data-which-return-an-empty-result-and-send-it-to-aurora;;4",
				"tags": [
					{
						"name": "@PaymentDetailsSearch",
						"line": 1
					},
					{
						"name": "@IDV",
						"line": 1
					},
					{
						"name": "@HappyPath",
						"line": 139
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 139
					}
				],
				"before": [
					{
						"result": {
							"duration": 3265680392,
							"status": "passed"
						},
						"match": {
							"location": "Setup.before(Scenario)"
						}
					}
				],
				"description": "",
				"name": "An agent performs a customer search with incorrect data which return an empty result and send it to Aurora",
				"keyword": "Scenario Outline",
				"line": 158,
				"steps": [
					{
						"result": {
							"duration": 5038122552,
							"status": "passed"
						},
						"name": "the CSR is logged in Aurora using the ID\u0026V website with the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 141,
						"match": {
							"arguments": [
								{
									"val": "with",
									"offset": 51
								}
							],
							"location": "IdvStepDefinitions.userOnIdAndVWithinAurora(String)"
						}
					},
					{
						"result": {
							"duration": 1118632,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "And ",
						"line": 142,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 711638950,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 4 following options:",
						"keyword": "And ",
						"line": 143,
						"match": {
							"arguments": [
								{
									"val": "4",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenu(int,String\u003e)"
						},
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 144
							},
							{
								"cells": [
									"Credit Card No."
								],
								"line": 145
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 146
							},
							{
								"cells": [
									"UMR"
								],
								"line": 147
							}
						]
					},
					{
						"result": {
							"duration": 456090556,
							"status": "passed"
						},
						"name": "the agent selects the IDV UMR option",
						"keyword": "When ",
						"line": 148,
						"match": {
							"arguments": [
								{
									"val": "UMR",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.setIdvRadioButtonOption(String)"
						},
						"matchedColumns": [
							0
						]
					},
					{
						"result": {
							"duration": 803709166,
							"status": "passed"
						},
						"name": "the agent enters a invalid IDV UMR \"777888999\"",
						"keyword": "And ",
						"line": 149,
						"match": {
							"arguments": [
								{
									"val": "invalid",
									"offset": 19
								},
								{
									"val": "UMR",
									"offset": 31
								},
								{
									"val": "777888999",
									"offset": 36
								}
							],
							"location": "IdvStepDefinitions.agentEntersValues(String,String,String)"
						},
						"matchedColumns": [
							0,
							1
						]
					},
					{
						"result": {
							"duration": 1182965039,
							"status": "passed"
						},
						"name": "the agent clicks on the IDV search button",
						"keyword": "And ",
						"line": 150,
						"match": {
							"arguments": [
								{
									"val": "search",
									"offset": 28
								}
							],
							"location": "IdvStepDefinitions.clickOnIdvButton(String)"
						}
					},
					{
						"result": {
							"duration": 91776726,
							"status": "passed"
						},
						"name": "the search returns 0 data results of customer",
						"keyword": "Then ",
						"line": 151,
						"match": {
							"arguments": [
								{
									"val": "0",
									"offset": 19
								},
								{
									"val": "ts",
									"offset": 31
								},
								{
									"val": "customer",
									"offset": 37
								}
							],
							"location": "IdvStepDefinitions.assertNoOfDataReturnedBySearch(int,String,String)"
						}
					},
					{
						"result": {
							"duration": 34784,
							"status": "passed"
						},
						"name": "the data are correctly sent to Aurora",
						"keyword": "And ",
						"line": 152,
						"match": {
							"location": "IdvStepDefinitions.dataSentToAurora()"
						}
					}
				],
				"type": "scenario"
			},
			{
				"after": [
					{
						"result": {
							"duration": 1148489085,
							"status": "passed"
						},
						"match": {
							"location": "Setup.tearDown()"
						}
					}
				],
				"id": "id\u0026v-module---as-an-agent-i-want-to-be-able-to-find-customers-by-it\u0027s-payment-details-so-i-can-id\u0026v-them-by-using-those-details;an-agent-performs-a-customer-search-which-returns-an-error-and-send-the-result-data-to-aurora",
				"tags": [
					{
						"name": "@IDV",
						"line": 160
					},
					{
						"name": "@Exceptions",
						"line": 160
					},
					{
						"name": "@NightlyBuild-Modules",
						"line": 160
					},
					{
						"name": "@Mocked",
						"line": 160
					}
				],
				"description": "",
				"name": "An agent performs a customer search which returns an error and send the result data to Aurora",
				"keyword": "Scenario",
				"line": 161,
				"steps": [
					{
						"result": {
							"duration": 5041259411,
							"status": "passed"
						},
						"name": "the CSR is logged in Aurora using the ID\u0026V website with the ID\u0026V Search by Credit Card details action",
						"keyword": "Given ",
						"line": 162,
						"match": {
							"arguments": [
								{
									"val": "with",
									"offset": 51
								}
							],
							"location": "IdvStepDefinitions.userOnIdAndVWithinAurora(String)"
						}
					},
					{
						"result": {
							"duration": 1118316,
							"status": "passed"
						},
						"name": "the ID\u0026V Payment Details Search page is displayed",
						"keyword": "And ",
						"line": 163,
						"match": {
							"location": "IdvStepDefinitions.idvPageDisplayed()"
						}
					},
					{
						"result": {
							"duration": 700663173,
							"status": "passed"
						},
						"name": "the Payment Details radio buttons menu appears with the 4 following options:",
						"keyword": "And ",
						"line": 164,
						"match": {
							"arguments": [
								{
									"val": "4",
									"offset": 56
								}
							],
							"location": "IdvStepDefinitions.assertRadioButtonMenu(int,String\u003e)"
						},
						"rows": [
							{
								"cells": [
									"Sort Code"
								],
								"line": 165
							},
							{
								"cells": [
									"Credit Card No."
								],
								"line": 166
							},
							{
								"cells": [
									"IBAN"
								],
								"line": 167
							},
							{
								"cells": [
									"UMR"
								],
								"line": 168
							}
						]
					},
					{
						"result": {
							"duration": 457203634,
							"status": "passed"
						},
						"name": "the agent selects the IDV Credit Card No. option",
						"keyword": "When ",
						"line": 169,
						"match": {
							"arguments": [
								{
									"val": "Credit Card No.",
									"offset": 26
								}
							],
							"location": "IdvStepDefinitions.setIdvRadioButtonOption(String)"
						}
					},
					{
						"result": {
							"duration": 810402914,
							"status": "passed"
						},
						"name": "the agent enters a valid IDV Credit Card No. \"errorCard\"",
						"keyword": "And ",
						"line": 170,
						"match": {
							"arguments": [
								{
									"val": "valid",
									"offset": 19
								},
								{
									"val": "Credit Card No.",
									"offset": 29
								},
								{
									"val": "errorCard",
									"offset": 46
								}
							],
							"location": "IdvStepDefinitions.agentEntersValues(String,String,String)"
						}
					},
					{
						"result": {
							"duration": 1191039569,
							"status": "passed"
						},
						"name": "the agent clicks on the IDV search button",
						"keyword": "And ",
						"line": 171,
						"match": {
							"arguments": [
								{
									"val": "search",
									"offset": 28
								}
							],
							"location": "IdvStepDefinitions.clickOnIdvButton(String)"
						}
					},
					{
						"result": {
							"duration": 90750601,
							"status": "passed"
						},
						"name": "the search returns 1 data result of error",
						"keyword": "Then ",
						"line": 172,
						"match": {
							"arguments": [
								{
									"val": "1",
									"offset": 19
								},
								{
									"val": "t",
									"offset": 31
								},
								{
									"val": "error",
									"offset": 36
								}
							],
							"location": "IdvStepDefinitions.assertNoOfDataReturnedBySearch(int,String,String)"
						}
					},
					{
						"result": {
							"duration": 34816,
							"status": "passed"
						},
						"name": "the data are correctly sent to Aurora",
						"keyword": "And ",
						"line": 173,
						"match": {
							"location": "IdvStepDefinitions.dataSentToAurora()"
						}
					}
				],
				"type": "scenario"
			}
		],
		"uri": "paymentDetailsSearch.feature"
	}
]